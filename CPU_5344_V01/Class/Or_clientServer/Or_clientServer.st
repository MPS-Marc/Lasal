//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "Or_clientServer"
	Revision           = "0.0"
	GUID               = "{3A442B36-FA99-4B26-A956-2FA20D4A04F1}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(284,120)">
	<Channels>
		<Server Name="ClassSvr" GUID="{2E2CF72E-9A5D-425B-B167-E3FA7C1D4D67}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Server" GUID="{01FE5D01-D396-42E3-A6C9-35610A3767B1}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Client Name="Client" Required="true" Internal="false"/>
	</Channels>
</Class>
*)
Or_clientServer : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
	Server 	: SvrCh_DINT;
  //Clients:
	Client 	: CltCh_DINT;
  //Variables:
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL ClassSvr::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB Or_clientServer::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_OR_CLIENTSERVER
0$UINT, 0$UINT, (SIZEOF(::Or_clientServer))$UINT, 
2$UINT, 1$UINT, 0$UINT, 
TO_UDINT(1021344977), "Or_clientServer", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::Or_clientServer.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
(::Or_clientServer.Server.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2861896304), "Server", 
//Clients:
(::Or_clientServer.Client.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(935117779), "Client", 
END_FUNCTION


#define USER_CNT_Or_clientServer 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_Or_clientServer] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION Or_clientServer::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_Or_clientServer, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Read		:= #Read();
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Server.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Server.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION
// Class Or_clientServer created by JdK at 21-5-2019 for standard lib MPS
// classsvr is made 1 if or client or server is 1, else it's 0

FUNCTION VIRTUAL GLOBAL Or_clientServer::ClassSvr::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

  Client:=Client.Read();
  ClassSvr:=Client|Server;

	output := ClassSvr;

END_FUNCTION
