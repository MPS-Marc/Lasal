//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)

//{{LSL_DEFINES

#define SV141_DEVICE_ID_SV141  1235
#define SV141_DEVICE_ID_SV142  1291
//}}LSL_DEFINES

//{{LSL_DECLARATION

(*!
<Class
	Name               = "SV141"
	Revision           = "1.11"
	GUID               = "{7F625BF7-5288-4D1B-9E62-E74482CFE281}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	IconPath           = ".\Class\Varan_16x16.ico"
	SharedCommandTable = "true"
	Objectsize         = "(284,120)"
	Comment            = "VARAN splitter (4 VARAN Out ports), switchable supply for VARAN Out ports and Realtime Ethernet on a specified Port">
	<Channels>
	</Channels>
	<RevDoku>
		<Owner Company="Sigmatek" Author="ZoePat"/>
		<Dokumentation Revision="1.11" Date="09.12.2019" Author="LanSte" Company="Sigmatek" Description="Added Server ProtocolVersion. InterframeGap is included in the resource calculation."/>
		<Dokumentation Revision="1.10" Date="30.07.2019" Author="FurDom" Company="Sigmatek" Description="added support for SV142 module"/>
		<Dokumentation Revision="1.9" Date="08.06.2018" Author="RamAnd" Company="Sigmatek" Description="LASAL Hardware Description (.lhd) file has been updated."/>
		<Dokumentation Revision="1.8" Date="12.01.2018" Author="LanSte" Company="Sigmatek" Description="Added PostInit Suppvort. Added Call to base class for disable device in interrupt."/>
		<Dokumentation Revision="1.7" Date="06.02.2017" Author="PieSte" Company="Sigmatek" Description="Changed &quot;Online&quot; server behavior to set online first if cyclic data is valid due to SA35740."/>
		<Dokumentation Revision="1.6" Date="30.08.2016" Author="ZoePat" Company="Sigmatek" Description="RealtimeIP did not work, because FPGA version 1.3 was checked by baseclass. Overrided new methode CheckRTEthernetAvaliable() to enable feature."/>
		<Dokumentation Revision="1.5" Date="12.07.2016" Author="SeiChr" Company="Sigmatek" Description="Added Values for the total Current calculation. SA 31571"/>
		<Dokumentation Revision="1.4" Date="10.05.2016" Author="RamAnd" Company="Sigmatek" Description="Suppressed warning that would occur with target ARM on compiler version 30 or higher."/>
		<Dokumentation Revision="1.3" Date="17.02.2016" Author="EisMic" Company="Sigmatek" Description="Prescalersettings were not set correctly when Payload is active."/>
		<Dokumentation Revision="1.2" Date="16.04.2015" Author="EisMic&#13;&#10;LanSte" Company="Sigmatek" Description="Added support for visualisation in graphical hardware editor.&#13;&#10;Added support for calculating resources for graphical hardware editor."/>
		<Dokumentation Revision="1.1" Date="24.03.2015" Author="EisMic" Company="Sigmatek" Description="Check pointer p_NodeInfo for validity in method GetRetryTimeout due to access exception error if method Varan_HWDisconnect is called and no hardware was available."/>
		<Dokumentation Revision="1.0" Date="20.11.2014" Author="ZoePat" Company="Sigmatek" Description="First library version."/>
	</RevDoku>
	<Network Name="SV141">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_base"
				GUID       = "{89139E15-0D25-4DDE-84F4-72F4AA8CC13D}"
				Class      = "VSV046"
				Position   = "(218,120)"
				Visualized = "true">
				<Channels>
					<Server Name="DeviceAddress"/>
					<Server Name="DeviceID"/>
					<Server Name="DeviceMACAddress"/>
					<Server Name="Online"/>
					<Server Name="ProtocolVersion"/>
					<Server Name="RealtimeIP_Link"/>
					<Server Name="Release"/>
					<Server Name="RetryCounter"/>
					<Server Name="SerialNo"/>
					<Server Name="State"/>
					<Server Name="SupplyVaranOut_0" Value="0"/>
					<Server Name="SupplyVaranOut_1" Value="0"/>
					<Server Name="SupplyVaranOut_2" Value="0"/>
					<Server Name="SupplyVaranOut_3" Value="0"/>
					<Server Name="SupplyVaranOut_4" Value="0"/>
					<Server Name="SyncOffset"/>
					<Server Name="ValidateSerNo"/>
					<Server Name="VaranOut_0"/>
					<Server Name="VaranOut_1"/>
					<Server Name="VaranOut_2"/>
					<Server Name="VaranOut_3"/>
					<Server Name="VaranOut_4"/>
					<Server Name="VendorID"/>
					<Client Name="DontCheckRxDestMAC" Value="0"/>
					<Client Name="RealtimeIP_Mode" Value="0"/>
					<Client Name="RealtimeIP_PortNr" Value="-1"/>
					<Client Name="Required" Value="1"/>
					<Client Name="SerNoValidation"/>
					<Client Name="Transparent" Value="0"/>
					<Client Name="UserAction"/>
					<Client Name="VaranIn"/>
					<Parameter KeyName="CableLength"/>
					<Parameter KeyName="SendDataMaxLength"/>
				</Channels>
				<AdditionalData>
					<Entry Name="DeviceType" Value="VSV046"/>
				</AdditionalData>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.State" Destination="_base.State" Vertices="(1088,210),(916,210),"/>
			<Connection Source="this.Online" Destination="_base.Online" Vertices="(1088,270),(916,270),"/>
			<Connection Source="this.Release" Destination="_base.Release" Vertices="(1088,330),(916,330),"/>
			<Connection Source="this.DeviceAddress" Destination="_base.DeviceAddress" Vertices="(1088,390),(916,390),"/>
			<Connection Source="this.VendorID" Destination="_base.VendorID" Vertices="(1088,450),(916,450),"/>
			<Connection Source="this.DeviceID" Destination="_base.DeviceID" Vertices="(1088,510),(916,510),"/>
			<Connection Source="this.SerialNo" Destination="_base.SerialNo" Vertices="(1088,570),(916,570),"/>
			<Connection Source="this.RetryCounter" Destination="_base.RetryCounter" Vertices="(1088,630),(916,630),"/>
			<Connection Source="this.ValidateSerNo" Destination="_base.ValidateSerNo" Vertices="(1088,690),(916,690),"/>
			<Connection Source="this.SupplyVaranOut_0" Destination="_base.SupplyVaranOut_0" Vertices="(1088,810),(916,810),"/>
			<Connection Source="this.SupplyVaranOut_1" Destination="_base.SupplyVaranOut_1" Vertices="(1088,870),(916,870),"/>
			<Connection Source="this.SupplyVaranOut_2" Destination="_base.SupplyVaranOut_2" Vertices="(1088,930),(916,930),"/>
			<Connection Source="this.SupplyVaranOut_3" Destination="_base.SupplyVaranOut_3" Vertices="(1088,990),(916,990),"/>
			<Connection Source="this.RealtimeIP_Link" Destination="_base.RealtimeIP_Link" Vertices="(1088,1050),(916,1110),"/>
			<Connection Source="this.SyncOffset" Destination="_base.SyncOffset" Vertices="(1088,1110),(916,1170),"/>
			<Connection Source="this.DeviceMACAddress" Destination="_base.DeviceMACAddress" Vertices="(1088,1170),(916,1230),"/>
			<Connection Source="this.VaranOut_0" Destination="_base.VaranOut_0" Vertices="(1088,1230),(916,1290),"/>
			<Connection Source="this.VaranOut_1" Destination="_base.VaranOut_1" Vertices="(1088,1290),(916,1350),"/>
			<Connection Source="this.VaranOut_2" Destination="_base.VaranOut_2" Vertices="(1088,1350),(916,1410),"/>
			<Connection Source="this.VaranOut_3" Destination="_base.VaranOut_3" Vertices="(1088,1410),(916,1470),"/>
			<Connection Source="_base.VaranIn" Destination="this.VaranIn" Vertices="(218,210),(38,210),"/>
			<Connection Source="_base.Required" Destination="this.Required" Vertices="(218,270),(38,270),"/>
			<Connection Source="_base.UserAction" Destination="this.UserAction" Vertices="(218,330),(38,330),"/>
			<Connection Source="_base.SerNoValidation" Destination="this.SerNoValidation" Vertices="(218,390),(38,390),"/>
			<Connection Source="_base.Transparent" Destination="this.Transparent" Vertices="(218,450),(38,450),"/>
			<Connection Source="_base.RealtimeIP_Mode" Destination="this.RealtimeIP_Mode" Vertices="(218,510),(38,510),"/>
			<Connection Source="_base.RealtimeIP_PortNr" Destination="this.RealtimeIP_PortNr" Vertices="(218,570),(38,570),"/>
			<Connection Source="_base.DontCheckRxDestMAC" Destination="this.DontCheckRxDestMAC" Vertices="(218,630),(38,630),"/>
			<Connection Source="this.ProtocolVersion" Destination="_base.ProtocolVersion" Vertices="(1088,750),(916,750),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
#pragma using VSV046

SV141 : CLASS
: VSV046
  //Servers:
  //Clients:
  //Variables:
  //Functions:
				//! <Function Comment="Check if DeviceID is supported by class" Name="CheckDeviceID"/>
	FUNCTION VIRTUAL GLOBAL CheckDeviceID
		VAR_INPUT
			ID2Check 	: UDINT;			//! <Variable Comment="VARAN DeviceID, which should be checked" Name="CheckDeviceID.ID2Check"/>
		END_VAR
		VAR_OUTPUT
			IsOK 	: BOOL;			//! <Variable Comment="TRUE...DeviceID is ok with this class&#13;&#10;FALSE..DeviceID is not ok with this class" Name="CheckDeviceID.IsOK"/>
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL GetDeviceID
		VAR_OUTPUT
			output 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GetMaxIP_PortNr;
	
	FUNCTION VIRTUAL CheckRTEthernetAvaliable
		VAR_OUTPUT
			bIsAvaliable 	: BOOL;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB SV141::@CT_
0$UINT,
2#0100000000000000$UINT, //TY_SV141
1$UINT, 11$UINT, (SIZEOF(::SV141))$UINT, 
0$UINT, 0$UINT, 0$UINT, 
TO_UDINT(2561306130), "SV141", //Class
TO_UDINT(2856004818), "VSV046", 1$UINT, 33$UINT, //Baseclass
//Servers:
//Clients:
END_FUNCTION


#define USER_CNT_SV141 52

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_SV141] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION SV141::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
		nCmdSize	: UINT;
	END_VAR

	ret_code	:= VSV046::@STD();
	IF ret_code <> C_OK THEN
		RETURN;
	END_IF;
	nCmdSize		:= Varan_Base::State.pMeth^.nCmds$UINT*SIZEOF(pVoid) + CMDMETH.Init;

	_memcpy((#vmt.CmdTable)$^USINT, Varan_Base::State.pMeth, nCmdSize);
	vmt.CmdTable.nCmds		:= nSTDCMD + USER_CNT_SV141;
#pragma warning (disable : 74)
	vmt.UserFcts[27]		:= #CheckDeviceID();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[43]		:= #GetDeviceID();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[49]		:= #GetMaxIP_PortNr();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[51]		:= #CheckRTEthernetAvaliable();

#pragma warning (default : 74)
	Varan_Base::State.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF Varan_Base::State.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL SV141::GetMaxIP_PortNr

  MaxIPPortNr := 3;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL SV141::CheckDeviceID
	VAR_INPUT
		ID2Check 	: UDINT;
	END_VAR
	VAR_OUTPUT
		IsOK 	: BOOL;
	END_VAR
	//look if it is right hardware
	if (( ID2Check <> SV141_DEVICE_ID_SV141 )
  & (ID2Check <> SV141_DEVICE_ID_SV142)) then
		IsOK := FALSE;
	else
    IsOK := TRUE;
	end_if;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL SV141::GetDeviceID
	VAR_OUTPUT
		output 	: UDINT;
	END_VAR

  output := SV141_DEVICE_ID_SV141;
  
END_FUNCTION


FUNCTION VIRTUAL SV141::CheckRTEthernetAvaliable
	VAR_OUTPUT
		bIsAvaliable 	: BOOL;
	END_VAR

  bIsAvaliable := TRUE;
  
END_FUNCTION
