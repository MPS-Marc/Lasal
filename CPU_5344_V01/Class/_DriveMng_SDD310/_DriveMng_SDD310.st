//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "_DriveMng_SDD310"
	Revision           = "1.62"
	GUID               = "{A164CB69-00BD-40FD-86F5-0FBE8113DB03}"
	RealtimeTask       = "false"
	CyclicTask         = "true"
	DefCyclictime      = "10 ms"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	IconPath           = ".\Class\_DriveMngBase\Drive.ico"
	SharedCommandTable = "true"
	Objectsize         = "(586,120)"
	Comment            = "manages the whole varancommunication between&#13;&#10;the Drive and the application">
	<Channels>
		<Server Name="CRC_ErrorCounter" GUID="{68DC63E0-CE3F-4AD5-B969-91A20CC91917}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="counts the CRC errors of all axis"/>
		<Server Name="FwDate" GUID="{8AF938B9-8DFD-43F8-868B-1668C1C542E1}" Class="VirtualBaseInit" Visualized="false" Initialize="true" WriteProtected="true" Retentive="false" Comment="use this channel to access the string functions"/>
		<Server Name="FWVersion" GUID="{B79B94DA-296E-4141-9053-9241E17BFD42}" Class="VirtualBaseInit" Visualized="false" Initialize="true" WriteProtected="true" Retentive="false" Comment="use this channel to access the string functions"/>
		<Server Name="ProtocolVersion" GUID="{FEA3EB7A-F84A-4F0C-9003-42B6842442DC}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Server shows the VARAN Protocol Version in the format xx.y.z&#13;&#10;e.g. 16#0130 means v01.3.0"/>
		<Server Name="ValidateSerNo" GUID="{6068929E-03D3-4E35-8C89-473DE5042736}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false" Comment="if the validation of the serial number is activated (SerNoValidation = 1)&#13;&#10;the serial number of the actual module can be validated by writing to this server&#13;&#10;&#13;&#10;this server shows also the state of validation:&#13;&#10;-2..validation not acivated&#13;&#10;-1..no module validated on this position&#13;&#10; 0..module is not the validated one&#13;&#10; 1..module is the validated one"/>
		<Server Name="VaranOut_1" GUID="{37626A53-4E40-4D3B-94F4-7CF10DC09E5F}" Class="Hub_Base" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="VaranOut"/>
		<Client Name="FWDateString" Required="true" Internal="true"/>
		<Client Name="FWNumSTring" Required="true" Internal="true"/>
		<Client Name="Required" Required="true" Internal="false" Comment="0=module is not required, 1=module is required "/>
		<Client Name="SerNoValidation" Required="false" Internal="false" Comment="0..serial number of varan client does not matter&#13;&#10;1..serial number of varan client has to be validated, to use the module&#13;&#10;&#13;&#10;validation is done via write(1) to the ValidateSerNo Server"/>
		<Client Name="Transparent" Required="false" Internal="false" DefValue="0" Comment="If this Client is set to 1 the module is not used for building the VARAN-Tree"/>
		<Client Name="UserAction" Required="false" Internal="false" Comment="optional, connect to server to get Varan states (connect,disconnect,interrupt)"/>
		<Client Name="VaranDriveBase" Required="true" Internal="true"/>
		<Client Name="VaranIn" Required="true" Internal="false" Comment="Connect with a Varan Communication Class"/>
		<Client Name="VaranTimeMultiplier" Required="false" Internal="false" Comment="multiplier of varan time"/>
	</Channels>
	<RevDoku>
		<Owner Company="Sigmatek" Author="HasHan"/>
		<Dokumentation Revision="1.62" Date="09.12.2019" Author="LanSte" Company="Sigmatek" Description="Added Server ProtocolVersion. InterframeGap is included in the resource calculation."/>
		<Dokumentation Revision="1.61" Date="08.06.2018" Author="RamAnd" Company="Sigmatek" Description="LASAL Hardware Description (.lhd) file has been updated."/>
		<Dokumentation Revision="1.60" Date="05.09.2016" Author="ZoePat" Company="Sigmatek" Description="Corrected error with asyncron communication, that could overwrite realtime data for 1 cycle if a SDDxxx was used with VarantimeMultiplier &gt; 1."/>
		<Dokumentation Revision="1.59" Date="10.05.2016" Author="RamAnd" Company="Sigmatek" Description="Suppressed warning that would occur with target ARM on compiler version 30 or higher."/>
		<Dokumentation Revision="1.58" Date="02.05.2016" Author="EisMic" Company="Sigmatek" Description="Added new NewInst commando for Lasal2 to get Transparent state."/>
		<Dokumentation Revision="1.57" Date="07.04.2016" Author="EisMic" Company="Sigmatek" Description="Corrected error in initialisation which leads to an error that the drive is not initialized.&#13;&#10;Added support for new firmwares which use 2 more bits for calculation of the year date of the firmware creation."/>
		<Dokumentation Revision="1.56" Date="16.03.2016" Author="EisMic" Company="Sigmatek" Description="Improved comment of server HWVersion (to clarify that the shown version corresponds to the parameter I-HC of the drive)."/>
		<Dokumentation Revision="1.55" Date="11.11.2015" Author="EisMic" Company="Sigmatek" Description="Added dummy connectors in lhd file so that the connector lines in the graphical hardware editor are drawn correctly."/>
		<Dokumentation Revision="1.54" Date="25.08.2015" Author="EisMic" Company="Sigmatek" Description="DataObjects are now installed in UpdateCy and are added to DOList in UpdateRt if the OS supports the new interface method. Version 16#1003 or higher of the pMultiVaran-Interface is needed to use this feature."/>
		<Dokumentation Revision="1.53" Date="30.06.2015" Author="EisMic" Company="Sigmatek" Description="Corrected connector labeling in hardware description file."/>
		<Dokumentation Revision="1.52" Date="18.06.2015" Author="PieSte" Company="Sigmatek" Description="Add newinst command to call methode DisableDevice() and EnableDevice() to avoid retrys when hw disconnected.&#13;&#10;Corrected function Varan_HwDisconnect() to set dataobjects off."/>
		<Dokumentation Revision="1.51" Date="26.05.2015" Author="RamAnd" Company="Sigmatek" Description="Added possibility to get enabled Axis which is needed to set absolute position of axis."/>
		<Dokumentation Revision="1.50" Date="21.05.2015" Author="PieSte" Company="Sigmatek" Description="Corrected graphical size of module at lhd-file."/>
		<Dokumentation Revision="1.49" Date="16.04.2015" Author="PieSte&#13;&#10;LanSte&#13;&#10;PieSte" Company="Sigmatek" Description="Added support for visualisation in graphical hardware editor.&#13;&#10;Added support for calculating resources for graphical hardware editor.&#13;&#10;Add new parameter to read drive scope faster. It is used for SDD1X00 drives."/>
		<Dokumentation Revision="1.48" Date="24.03.2015" Author="EisMic" Company="Sigmatek" Description="Check pointer p_NodeInfo for validity in method GetRetryTimeout due to access exception error if method Varan_HWDisconnect is called and no hardware was available."/>
		<Dokumentation Revision="1.47" Date="06.03.2015" Author="PieSte" Company="Sigmatek" Description="Changed commands for businterface to be compatible with new drive hardware.&#13;&#10;Changed visual state of FwNumString and FwDateString object for lse displaying."/>
		<Dokumentation Revision="1.46" Date="13.08.2014" Author="LanSte" Company="Sigmatek" Description="Corrected reading Firmwareversion with newinst cmd: CMD_GET_HARDWARE_DIAGNOSE "/>
		<Dokumentation Revision="1.45" Date="30.07.2014" Author="RamAnd" Company="Sigmatek" Description="Loop to check for retries could have caused a crash, if the drive wasn&apos;t initialized so far."/>
		<Dokumentation Revision="1.44" Date="25.07.2014" Author="LanSte&#13;&#10;PieSte" Company="Sigmatek" Description="Added Support for reading hardware diagnose and hardwaretree entry.&#13;&#10;Corrected internal call of GetParameterState in baseclass _DriveMngBase."/>
		<Dokumentation Revision="1.43" Date="07.05.2014" Author="EisMic" Company="Sigmatek" Description="Added missing servers in lhd file and corrected the type of servers."/>
		<Dokumentation Revision="1.42" Date="07.05.2014" Author="LanSte" Company="Sigmatek" Description="Improved Transparent property description in HW-Tree and activated greying out of the object in the HW-Tree.&#13;&#10;Minimized the interface request via CILGET by useing private pointers to reduce time in init."/>
		<Dokumentation Revision="1.41" Date="06.03.2014" Author="RamAnd" Company="Sigmatek" Description="Changed offset of SyncOut 1 (62,5µs) to be synchron with the SyncOut 0 to prevent inconsistent data in the drive firmware."/>
		<Dokumentation Revision="1.40" Date="12.02.2014" Author="ZoePat&#13;&#10;ZoePat" Company="Sigmatek" Description="Added new NewInst comando for Lasal2 to get the list of axis.&#13;&#10;ExtendedAxis for Axis2 of SDD210 and SDD215 din&apos;t work."/>
		<Dokumentation Revision="1.30" Date="20.01.2014" Author="RamAnd&#13;&#10;PieSte" Company="Sigmatek" Description="Success of GetSyncParameter and SetSyncParameter couldn&apos;t be ensured because the return value wasn&apos;t initialized if the method succeeds.&#13;&#10;Add TaskDelay 15ms in _VaranDriveBase Varan_HwConnect to initialize the Hardware."/>
		<Dokumentation Revision="1.20" Date="05.12.2013" Author="LanSte" Company="Sigmatek" Description="Added payload support"/>
		<Dokumentation Revision="1.10" Date="05.11.2012" Author="RamAnd" Company="Sigmatek" Description="Content of corresponding LASAL Hardware Description file (.lhd) which is necessary for the hardware editor has been updated"/>
		<Dokumentation Revision="1.4" Date="15.06.2011" Author="Ramand" Company="Sigmatek" Description="Client Transparent has to be not required, as it is a new feature."/>
		<Dokumentation Revision="1.3" Date="18.05.2011" Author="RamAnd" Company="Sigmatek" Description="After the Online-Server changed to 1, it was possible that the synchron values (like actual position) took 1 more realtime cycle to be shown by the class."/>
		<Dokumentation Revision="1.2" Date="20.04.2011" Author="SvePau" Company="Sigmatek" Description="Connected server ValidateSerNo from baseclass to derivation"/>
		<Dokumentation Revision="1.1" Date="13.04.2011" Author="BleErn" Company="Sigmatek" Description="Added Client Transparent that allows to disable a VARAN-HW-Class"/>
		<Dokumentation Revision="1.0" Date="09.02.2011" Author="WalRob" Company="Sigmatek" Description="Initial version"/>
	</RevDoku>
	<Network Name="_DriveMng_SDD310">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_base"
				GUID       = "{C77512B6-89F8-45FD-8DBB-E3D4BDE1BB28}"
				Class      = "_DriveMngBase"
				Position   = "(1816,120)"
				Visualized = "false">
				<Channels>
					<Server Name="AxisAvailable"/>
					<Server Name="CmdState"/>
					<Server Name="DeviceAddress"/>
					<Server Name="DeviceID"/>
					<Server Name="DriveType"/>
					<Server Name="HWVersion"/>
					<Server Name="Online"/>
					<Server Name="Release"/>
					<Server Name="RetryCounter"/>
					<Server Name="SerialNo"/>
					<Server Name="VendorID"/>
					<Client Name="cOnline"/>
					<Client Name="coStdLib"/>
					<Client Name="FwDatetr"/>
					<Client Name="FwNumStr"/>
					<Client Name="To_TaskObjectControl"/>
					<Client Name="ToBusIF"/>
					<Client Name="toVaran"/>
				</Channels>
			</Object>
			<Object
				Name       = "FWDateString"
				GUID       = "{B395EC4B-03CD-4AAC-80CB-3C187BCA6A1C}"
				Class      = "String"
				Position   = "(1170,450)"
				Visualized = "true">
				<Channels>
					<Server Name="Data"/>
					<Client Name="SingleRealloc" Value="1"/>
				</Channels>
			</Object>
			<Object
				Name       = "FWNumSTring"
				GUID       = "{1BED838D-D835-4828-AFC2-5EA610586DBB}"
				Class      = "String"
				Position   = "(1170,300)"
				Visualized = "true">
				<Channels>
					<Server Name="Data"/>
					<Client Name="SingleRealloc" Value="1"/>
				</Channels>
			</Object>
			<Object
				Name       = "VaranDriveBase"
				GUID       = "{839C8B77-C23D-4CB4-8D30-7DCFCD98FB6D}"
				Class      = "_VaranDriveBase"
				Position   = "(450,120)"
				Visualized = "false">
				<Channels>
					<Server Name="CRC_ErrorCounter"/>
					<Server Name="DeviceAddress"/>
					<Server Name="DeviceID"/>
					<Server Name="Input1"/>
					<Server Name="Input2"/>
					<Server Name="Input3"/>
					<Server Name="Input4"/>
					<Server Name="Input5"/>
					<Server Name="Input6"/>
					<Server Name="Input7"/>
					<Server Name="Input8"/>
					<Server Name="Online"/>
					<Server Name="ProtocolVersion"/>
					<Server Name="Release"/>
					<Server Name="RetryCounter"/>
					<Server Name="SerialNo"/>
					<Server Name="State"/>
					<Server Name="Synchron"/>
					<Server Name="ValidateSerNo"/>
					<Server Name="VaranOut_1"/>
					<Server Name="VendorID"/>
					<Client Name="FetchDigitalInputs" Value="0"/>
					<Client Name="Required" Value="1"/>
					<Client Name="SerNoValidation"/>
					<Client Name="Transparent" Value="0"/>
					<Client Name="UserAction"/>
					<Client Name="VaranIn"/>
					<Client Name="VaranTimeMultiplier"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.CmdState" Destination="_base.CmdState" Vertices="(2478,210),(2306,210),"/>
			<Connection Source="VaranDriveBase.VaranIn" Destination="this.VaranIn" Vertices="(450,210),(120,210),(120,810),(38,810),"/>
			<Connection Source="VaranDriveBase.Required" Destination="this.Required" Vertices="(450,270),(180,270),(180,870),(38,870),"/>
			<Connection Source="this.VaranDriveBase" Destination="VaranDriveBase.State"/>
			<Connection Source="VaranDriveBase.VaranTimeMultiplier" Destination="this.VaranTimeMultiplier" Vertices="(450,510),(300,510),(300,1110),(38,1110),"/>
			<Connection Source="VaranDriveBase.UserAction" Destination="this.UserAction" Vertices="(450,330),(210,330),(210,930),(38,930),"/>
			<Connection Source="_base.toVaran" Destination="VaranDriveBase.State" Vertices="(1816,210),(1050,210),"/>
			<Connection Source="_base.cOnline" Destination="VaranDriveBase.Online" Vertices="(1816,270),(1050,270),"/>
			<Connection Source="this.Online" Destination="_base.Online" Vertices="(2478,270),(2306,270),"/>
			<Connection Source="this.Release" Destination="_base.Release" Vertices="(2478,330),(2306,330),"/>
			<Connection Source="this.DriveType" Destination="_base.DriveType" Vertices="(2478,630),(2306,630),"/>
			<Connection Source="this.DeviceAddress" Destination="_base.DeviceAddress" Vertices="(2478,390),(2306,390),"/>
			<Connection Source="this.VendorID" Destination="_base.VendorID" Vertices="(2478,450),(2306,450),"/>
			<Connection Source="this.DeviceID" Destination="_base.DeviceID" Vertices="(2478,510),(2306,510),"/>
			<Connection Source="this.RetryCounter" Destination="_base.RetryCounter" Vertices="(2478,570),(2306,570),"/>
			<Connection Source="this.SerialNo" Destination="_base.SerialNo" Vertices="(2478,690),(2340,690),(2306,750),"/>
			<Connection Source="_base.FwDatetr" Destination="FWDateString.Data" Vertices="(1816,390),(1710,390),(1710,450),(1710,540),(1936,540),"/>
			<Connection Source="this.HWVersion" Destination="_base.HWVersion" Vertices="(2478,750),(2340,750),(2306,810),"/>
			<Connection Source="this.CRC_ErrorCounter" Destination="VaranDriveBase.CRC_ErrorCounter" Vertices="(2478,1050),(1170,1050),(1170,810),(1050,810),"/>
			<Connection Source="this.VaranOut_1" Destination="VaranDriveBase.VaranOut_1" Vertices="(2478,1110),(1140,1110),(1050,1410),"/>
			<Connection Source="this.FWNumSTring" Destination="FWNumSTring.Data"/>
			<Connection Source="this.FWDateString" Destination="FWDateString.Data"/>
			<Connection Source="this.FwDate" Destination="FWDateString.Data" Vertices="(2478,870),(2340,870),(2310,900),(1530,900),(1530,540),(1936,540),"/>
			<Connection Source="_base.FwNumStr" Destination="FWNumSTring.Data" Vertices="(1816,330),(1560,330),(1560,390),(1936,390),"/>
			<Connection Source="this.FWVersion" Destination="FWNumSTring.Data" Vertices="(2478,810),(2340,810),(2310,870),(1560,870),(1560,390),(1936,390),"/>
			<Connection Source="VaranDriveBase.SerNoValidation" Destination="this.SerNoValidation" Vertices="(450,390),(240,390),(240,990),(38,990),"/>
			<Connection Source="VaranDriveBase.Transparent" Destination="this.Transparent" Vertices="(450,450),(270,450),(270,1050),(38,1050),"/>
			<Connection Source="this.ValidateSerNo" Destination="VaranDriveBase.ValidateSerNo" Vertices="(2478,930),(1230,930),(1230,690),(1050,690),"/>
			<Connection Source="this.ProtocolVersion" Destination="VaranDriveBase.ProtocolVersion" Vertices="(2478,990),(1200,990),(1200,750),(1050,750),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
#pragma using _DriveMngBase

_DriveMng_SDD310 : CLASS
: _DriveMngBase
  //Servers:
	FWVersion 	: SvrChCmd_UDINT;
	FwDate 	: SvrChCmd_UDINT;
	ValidateSerNo 	: SvrCh_DINT;
	ProtocolVersion 	: SvrCh_HDINT;
	CRC_ErrorCounter 	: SvrCh_DINT;
	VaranOut_1 	: SvrChCmd_DINT;
  //Clients:
	VaranIn 	: CltChCmd_Hub_Base;
	Required 	: CltCh_DINT;
	UserAction 	: CltCh_DINT;
	SerNoValidation 	: CltCh_DINT;
	Transparent 	: CltCh_DINT;
	VaranTimeMultiplier 	: CltCh_UDINT;
	FWDateString 	: CltChCmd_String;
	FWNumSTring 	: CltChCmd_String;
	VaranDriveBase 	: CltChCmd__VaranDriveBase;
  //Variables:
  //Functions:
	
	FUNCTION VIRTUAL GetBusDeviceID
		VAR_OUTPUT
			output 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GetDrvDeviceID
		VAR_OUTPUT
			output 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL ProtocolVersion::Read
		VAR_OUTPUT
			output (EAX) 	: HDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL CRC_ErrorCounter::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL VaranOut_1::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma using _VaranDriveBase
#pragma using String
#pragma usingLtd Hub_Base


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB _DriveMng_SDD310::@CT_
0$UINT,
2#0100000000000000$UINT, //TY__DRIVEMNG_SDD310
1$UINT, 62$UINT, (SIZEOF(::_DriveMng_SDD310))$UINT, 
6$UINT, 9$UINT, 0$UINT, 
TO_UDINT(483132773), "_DriveMng_SDD310", //Class
TO_UDINT(496739206), "_DriveMngBase", 1$UINT, 45$UINT, //Baseclass
//Servers:
(::_DriveMng_SDD310.FWVersion.pMeth)$UINT, _CH_SVR_OBJ$UINT, 2#0000000001000000$UINT, TO_UDINT(156722779), "FWVersion", 
(::_DriveMng_SDD310.FwDate.pMeth)$UINT, _CH_SVR_OBJ$UINT, 2#0000000001000000$UINT, TO_UDINT(1606377179), "FwDate", 
(::_DriveMng_SDD310.ValidateSerNo.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1774120368), "ValidateSerNo", 
(::_DriveMng_SDD310.ProtocolVersion.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1757312337), "ProtocolVersion", 
(::_DriveMng_SDD310.CRC_ErrorCounter.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2665485201), "CRC_ErrorCounter", 
(::_DriveMng_SDD310.VaranOut_1.pMeth)$UINT, _CH_SVR_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(2138873746), "VaranOut_1", 
//Clients:
(::_DriveMng_SDD310.VaranIn.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000110$UINT, TO_UDINT(2999796184), "VaranIn", TO_UDINT(3238133653), "Hub_Base", 1$UINT, 21$UINT, 
(::_DriveMng_SDD310.Required.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000110$UINT, TO_UDINT(648558917), "Required", 
(::_DriveMng_SDD310.UserAction.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000100$UINT, TO_UDINT(615089769), "UserAction", 
(::_DriveMng_SDD310.SerNoValidation.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000100$UINT, TO_UDINT(2258645482), "SerNoValidation", 
(::_DriveMng_SDD310.Transparent.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000100$UINT, TO_UDINT(2239134692), "Transparent", 
(::_DriveMng_SDD310.VaranTimeMultiplier.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000100$UINT, TO_UDINT(873970582), "VaranTimeMultiplier", 
(::_DriveMng_SDD310.FWDateString.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(3010322216), "FWDateString", TO_UDINT(1850111279), "String", 1$UINT, 11$UINT, 
(::_DriveMng_SDD310.FWNumSTring.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(4286323315), "FWNumSTring", TO_UDINT(1850111279), "String", 1$UINT, 11$UINT, 
(::_DriveMng_SDD310.VaranDriveBase.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(4057195117), "VaranDriveBase", TO_UDINT(766164962), "_VaranDriveBase", 1$UINT, 67$UINT, 
END_FUNCTION


#define USER_CNT__DriveMng_SDD310 6

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT__DriveMng_SDD310] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION _DriveMng_SDD310::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
		nCmdSize	: UINT;
	END_VAR

	ret_code	:= _DriveMngBase::@STD();
	IF ret_code <> C_OK THEN
		RETURN;
	END_IF;
	nCmdSize		:= _DriveMngBase::CmdState.pMeth^.nCmds$UINT*SIZEOF(pVoid) + CMDMETH.Init;

	_memcpy((#vmt.CmdTable)$^USINT, _DriveMngBase::CmdState.pMeth, nCmdSize);
	vmt.CmdTable.nCmds		:= nSTDCMD + USER_CNT__DriveMng_SDD310;
#pragma warning (disable : 74)
	vmt.UserFcts[3]		:= #GetBusDeviceID();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[4]		:= #GetDrvDeviceID();

#pragma warning (default : 74)
	_DriveMngBase::CmdState.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF _DriveMngBase::CmdState.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	_memcpy((#vmt.CmdTable)$^USINT, FWVersion.pMeth, SIZEOF(CMDMETH));
	vmt.CmdTable.nCmds		:= nSTDCMD;
	FWVersion.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF FWVersion.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	_memcpy((#vmt.CmdTable)$^USINT, FwDate.pMeth, SIZEOF(CMDMETH));
	vmt.CmdTable.nCmds		:= nSTDCMD;
	FwDate.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF FwDate.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	ValidateSerNo.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF ValidateSerNo.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	ProtocolVersion.pMeth			:= StoreMethod( #ProtocolVersion::Read(), #M_NO_F() );
	IF ProtocolVersion.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	CRC_ErrorCounter.pMeth			:= StoreMethod( #CRC_ErrorCounter::Read(), #M_NO_F() );
	IF CRC_ErrorCounter.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	_memcpy((#vmt.CmdTable)$^USINT, VaranOut_1.pMeth, SIZEOF(CMDMETH));
	vmt.CmdTable.nCmds		:= nSTDCMD;
	vmt.CmdTable.Read		:= #VaranOut_1::Read();
	VaranOut_1.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF VaranOut_1.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION
FUNCTION VIRTUAL GLOBAL _DriveMng_SDD310::CRC_ErrorCounter::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	CRC_ErrorCounter := VaranDriveBase.CRC_ErrorCounter.Read();
	output := CRC_ErrorCounter;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL _DriveMng_SDD310::VaranOut_1::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	VaranOut_1 := VaranDriveBase.VaranOut_1.Read();
	output := VaranOut_1;

END_FUNCTION

FUNCTION VIRTUAL _DriveMng_SDD310::GetBusDeviceID
	VAR_OUTPUT
		output 	: UDINT;
	END_VAR

  output := DRIVEMNG_BUSDEVICEID_VAC013;
  
END_FUNCTION


FUNCTION VIRTUAL _DriveMng_SDD310::GetDrvDeviceID
	VAR_OUTPUT
		output 	: UDINT;
	END_VAR
  
  output := DRIVEMNG_DRVDEVICEID_SDD310;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL _DriveMng_SDD310::ProtocolVersion::Read
	VAR_OUTPUT
		output (EAX) 	: HDINT;
	END_VAR

	ProtocolVersion := VaranDriveBase.ProtocolVersion.Read();
	output := ProtocolVersion;

END_FUNCTION
