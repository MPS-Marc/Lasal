//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "AbsoluteIt"
	Revision           = "0.0"
	GUID               = "{E3F7622B-BEFC-41B9-B563-C1E756F49282}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(284,120)">
	<Channels>
		<Server Name="ClassSvr" GUID="{829B5A0A-2D4A-483C-900F-3F5B40721E73}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Client Name="AnaOut" Required="true" Internal="false"/>
	</Channels>
</Class>
*)
AbsoluteIt : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
  //Clients:
	AnaOut 	: CltCh_DINT;
  //Variables:
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL ClassSvr::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB AbsoluteIt::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_ABSOLUTEIT
0$UINT, 0$UINT, (SIZEOF(::AbsoluteIt))$UINT, 
1$UINT, 1$UINT, 0$UINT, 
TO_UDINT(4237746703), "AbsoluteIt", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::AbsoluteIt.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
//Clients:
(::AbsoluteIt.AnaOut.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(1637963547), "AnaOut", 
END_FUNCTION


#define USER_CNT_AbsoluteIt 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_AbsoluteIt] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION AbsoluteIt::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_AbsoluteIt, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Write		:= #Write();
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL AbsoluteIt::ClassSvr::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	ClassSvr := input;
  AnaOut := abs(ClassSvr);
  AnaOut.Write(input:=AnaOut);
	result := ClassSvr;

END_FUNCTION
