//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "punchToolSettingsMpsControl"
	Revision           = "1.0"
	GUID               = "{A1733630-78CE-4E8B-9D11-0757C9BCBB57}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(284,120)">
	<Channels>
		<Server Name="setting1" GUID="{764CD2AE-8406-48F7-9307-B5190ADB6CCC}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Client Name="offset" Required="true" Internal="false"/>
	</Channels>
	<Network Name="punchToolSettingsMpsControl">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_base"
				GUID       = "{93EB0CF8-A23A-4EAB-98FA-65BE75E07B94}"
				Class      = "baseToolSettingsMpsControl"
				Position   = "(218,120)"
				Visualized = "true"
				Remotely   = "true">
				<Channels>
					<Server Name="amountOfSettings" Value="4"/>
					<Server Name="ClassSvr"/>
					<Server Name="Name"/>
					<Server Name="plane" Value="right"/>
					<Server Name="toolType" Value="9"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.ClassSvr" Destination="_base.ClassSvr" Vertices="(690,210),(518,210),"/>
			<Connection Source="this.toolType" Destination="_base.toolType" Vertices="(690,270),(518,270),"/>
			<Connection Source="this.Name" Destination="_base.Name" Vertices="(690,330),(518,330),"/>
			<Connection Source="this.plane" Destination="_base.plane" Vertices="(690,390),(518,390),"/>
			<Connection Source="this.amountOfSettings" Destination="_base.amountOfSettings" Vertices="(690,450),(518,450),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
#pragma using baseToolSettingsMpsControl

punchToolSettingsMpsControl : CLASS
: baseToolSettingsMpsControl
  //Servers:
	setting1 	: SvrCh_DINT;
  //Clients:
	offset 	: CltCh_DINT;
  //Variables:
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL setting1::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB punchToolSettingsMpsControl::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_PUNCHTOOLSETTINGSMPSCONTROL
1$UINT, 0$UINT, (SIZEOF(::punchToolSettingsMpsControl))$UINT, 
1$UINT, 1$UINT, 0$UINT, 
TO_UDINT(3993575151), "punchToolSettingsMpsControl", //Class
TO_UDINT(3548367411), "baseToolSettingsMpsControl", 1$UINT, 0$UINT, //Baseclass
//Servers:
(::punchToolSettingsMpsControl.setting1.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2160737533), "setting1", 
//Clients:
(::punchToolSettingsMpsControl.offset.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(2851212630), "offset", 
END_FUNCTION


#define USER_CNT_punchToolSettingsMpsControl 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_punchToolSettingsMpsControl] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION punchToolSettingsMpsControl::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
		nCmdSize	: UINT;
	END_VAR

	ret_code	:= baseToolSettingsMpsControl::@STD();
	IF ret_code <> C_OK THEN
		RETURN;
	END_IF;
	nCmdSize		:= baseToolSettingsMpsControl::ClassSvr.pMeth^.nCmds$UINT*SIZEOF(pVoid) + CMDMETH.Init;

	_memcpy((#vmt.CmdTable)$^USINT, baseToolSettingsMpsControl::ClassSvr.pMeth, nCmdSize);
	vmt.CmdTable.nCmds		:= nSTDCMD + USER_CNT_punchToolSettingsMpsControl;
	baseToolSettingsMpsControl::ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF baseToolSettingsMpsControl::ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	setting1.pMeth			:= StoreMethod( #setting1::Read(), #M_NO_F() );
	IF setting1.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL punchToolSettingsMpsControl::setting1::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

  offset:= offset.Read();
  setting1:= offset;

	output := setting1;

END_FUNCTION
