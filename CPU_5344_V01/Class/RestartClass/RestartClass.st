//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "RestartClass"
	Revision           = "0.0"
	GUID               = "{45FF8DF4-A1C3-4EFF-8333-1094FC638C57}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(284,120)">
	<Channels>
		<Server Name="ClassSvr" GUID="{69D02376-A4E4-4402-8499-406240E43A9D}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Client Name="os" Required="false" Internal="false"/>
	</Channels>
</Class>
*)
RestartClass : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
  //Clients:
	os 	: CltChCmd__OSKernel;
  //Variables:
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL ClassSvr::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma usingLtd _OSKernel


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB RestartClass::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_RESTARTCLASS
0$UINT, 0$UINT, (SIZEOF(::RestartClass))$UINT, 
1$UINT, 1$UINT, 0$UINT, 
TO_UDINT(1799931486), "RestartClass", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::RestartClass.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
//Clients:
(::RestartClass.os.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(3294249339), "os", TO_UDINT(3045737964), "_OSKernel", 0$UINT, 5$UINT, 
END_FUNCTION


#define USER_CNT_RestartClass 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_RestartClass] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION RestartClass::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_RestartClass, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Write		:= #Write();
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL RestartClass::ClassSvr::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	ClassSvr := input;
  
  os.Reboot();
  
  
	result := ClassSvr;

END_FUNCTION
