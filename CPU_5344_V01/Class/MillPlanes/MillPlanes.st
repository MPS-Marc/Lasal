//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "MillPlanes"
	Revision           = "0.0"
	GUID               = "{332AD12E-C362-4E2B-928F-662E9B5F53D8}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(450,120)">
	<Channels>
		<Server Name="ClassSvr" GUID="{749BA4C8-582C-417F-B226-D92C0D02E729}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="firstIdx" GUID="{A3D3FF44-9D1D-464C-A402-A818606DA5A8}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Client Name="Line1" Required="true" Internal="true"/>
		<Client Name="Line2" Required="true" Internal="true"/>
		<Client Name="Line3" Required="true" Internal="true"/>
		<Client Name="Line4" Required="true" Internal="true"/>
		<Client Name="Line5" Required="true" Internal="true"/>
		<Client Name="Line6" Required="true" Internal="true"/>
	</Channels>
	<Network Name="MillPlanes">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "Line1"
				GUID       = "{A46E8D6A-4364-48C4-8D9D-16A7C7ABA5BD}"
				Class      = "MillPlane"
				Position   = "(150,270)"
				Visualized = "true">
				<Channels>
					<Server Name="amount"/>
					<Server Name="ClassSvr"/>
					<Server Name="depth"/>
					<Server Name="feedRate"/>
					<Server Name="firsIdx"/>
					<Server Name="lowerRate"/>
					<Server Name="rnr"/>
				</Channels>
			</Object>
			<Object
				Name       = "Line2"
				GUID       = "{BC735750-8AEE-40EC-B44C-A9BC7113A5A3}"
				Class      = "MillPlane"
				Position   = "(690,270)"
				Visualized = "true">
				<Channels>
					<Server Name="amount"/>
					<Server Name="ClassSvr"/>
					<Server Name="depth"/>
					<Server Name="feedRate"/>
					<Server Name="firsIdx"/>
					<Server Name="lowerRate"/>
					<Server Name="rnr"/>
				</Channels>
			</Object>
			<Object
				Name       = "Line3"
				GUID       = "{DB623CBB-CF31-4140-B23F-62495CB6D619}"
				Class      = "MillPlane"
				Position   = "(1230,270)"
				Visualized = "true">
				<Channels>
					<Server Name="amount"/>
					<Server Name="ClassSvr"/>
					<Server Name="depth"/>
					<Server Name="feedRate"/>
					<Server Name="firsIdx"/>
					<Server Name="lowerRate"/>
					<Server Name="rnr"/>
				</Channels>
			</Object>
			<Object
				Name       = "Line4"
				GUID       = "{EE6A7176-4339-4AE3-9F7A-E52E5C227707}"
				Class      = "MillPlane"
				Position   = "(1770,270)"
				Visualized = "true">
				<Channels>
					<Server Name="amount"/>
					<Server Name="ClassSvr"/>
					<Server Name="depth"/>
					<Server Name="feedRate"/>
					<Server Name="firsIdx"/>
					<Server Name="lowerRate"/>
					<Server Name="rnr"/>
				</Channels>
			</Object>
			<Object
				Name       = "Line5"
				GUID       = "{0899300B-988F-4CE9-AEA9-9A026D4C7430}"
				Class      = "MillPlane"
				Position   = "(2340,270)"
				Visualized = "true">
				<Channels>
					<Server Name="amount"/>
					<Server Name="ClassSvr"/>
					<Server Name="depth"/>
					<Server Name="feedRate"/>
					<Server Name="firsIdx"/>
					<Server Name="lowerRate"/>
					<Server Name="rnr"/>
				</Channels>
			</Object>
			<Object
				Name       = "Line6"
				GUID       = "{D3000023-1A5F-4D7F-8607-5CF55D928E4E}"
				Class      = "MillPlane"
				Position   = "(2910,270)"
				Visualized = "true">
				<Channels>
					<Server Name="amount"/>
					<Server Name="ClassSvr"/>
					<Server Name="depth"/>
					<Server Name="feedRate"/>
					<Server Name="firsIdx"/>
					<Server Name="lowerRate"/>
					<Server Name="rnr"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.Line1" Destination="Line1.ClassSvr"/>
			<Connection Source="this.Line2" Destination="Line2.ClassSvr"/>
			<Connection Source="this.Line3" Destination="Line3.ClassSvr"/>
			<Connection Source="this.Line4" Destination="Line4.ClassSvr"/>
			<Connection Source="this.Line5" Destination="Line5.ClassSvr"/>
			<Connection Source="this.Line6" Destination="Line6.ClassSvr"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
MillPlanes : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
	firstIdx 	: SvrCh_DINT;
  //Clients:
	Line2 	: CltChCmd_MillPlane;
	Line3 	: CltChCmd_MillPlane;
	Line6 	: CltChCmd_MillPlane;
	Line5 	: CltChCmd_MillPlane;
	Line1 	: CltChCmd_MillPlane;
	Line4 	: CltChCmd_MillPlane;
  //Variables:
		actPtr 	: ^strMillRecipe;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION GLOBAL WritePtrs
		VAR_INPUT
			ptr 	: ^strMillRecipe;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL firstIdx::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma using MillPlane


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB MillPlanes::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_MILLPLANES
0$UINT, 0$UINT, (SIZEOF(::MillPlanes))$UINT, 
2$UINT, 6$UINT, 0$UINT, 
TO_UDINT(2955608246), "MillPlanes", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::MillPlanes.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
(::MillPlanes.firstIdx.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2939634995), "firstIdx", 
//Clients:
(::MillPlanes.Line2.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(2195726312), "Line2", TO_UDINT(4109558799), "MillPlane", 0$UINT, 0$UINT, 
(::MillPlanes.Line3.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(4125568894), "Line3", TO_UDINT(4109558799), "MillPlane", 0$UINT, 0$UINT, 
(::MillPlanes.Line6.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(2240666609), "Line6", TO_UDINT(4109558799), "MillPlane", 0$UINT, 0$UINT, 
(::MillPlanes.Line5.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(478448203), "Line5", TO_UDINT(4109558799), "MillPlane", 0$UINT, 0$UINT, 
(::MillPlanes.Line1.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(468274770), "Line1", TO_UDINT(4109558799), "MillPlane", 0$UINT, 0$UINT, 
(::MillPlanes.Line4.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(1803795165), "Line4", TO_UDINT(4109558799), "MillPlane", 0$UINT, 0$UINT, 
END_FUNCTION


#define USER_CNT_MillPlanes 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_MillPlanes] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION MillPlanes::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_MillPlanes, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Init		:= #Init();
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	firstIdx.pMeth			:= StoreMethod( #M_RD_DIRECT(), #firstIdx::Write() );
	IF firstIdx.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION GLOBAL MillPlanes::WritePtrs
	VAR_INPUT
		ptr 	: ^strMillRecipe;
	END_VAR

  actPtr := ptr;
  
  firstIdx.Write(input:=0);

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MillPlanes::firstIdx::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR
 
	firstIdx := input;

  if firstIdx >= 0 & firstIdx < (CMAXMILLPLANESINRECIPE) & actPtr<> NIL then
    Line1.WritePtr(iptr:=#actPtr^.planes[firstIdx]);
    Line1.rnr := firstIdx + 1;
    
//    Line2.WritePtr(iptr:=#actPtr^.planes[firstIdx+1]);
//    Line2.rnr := firstIdx + 2;
//
//    Line3.WritePtr(iptr:=#actPtr^.planes[firstIdx+2]);
//    Line3.rnr := firstIdx +3;
//    
//    Line4.WritePtr(iptr:=#actPtr^.planes[firstIdx+3]);
//    Line4.rnr := firstIdx +4;
//    
//    Line5.WritePtr(iptr:=#actPtr^.planes[firstIdx+4]);
//    Line5.rnr := firstIdx +5;
//
//    Line6.WritePtr(iptr:=#actPtr^.planes[firstIdx+5]);
//    Line6.rnr := firstIdx +6;
    
  else
    result := ACCESS_DENIED;
    if firstIdx> 0 then
      firstIdx-=1;  
    else
      firstIdx+=1;
    end_if;
  end_if;
    result := firstIdx;
	

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MillPlanes::Init
  // op startup firstidx writen om alles een rnr te geven
  firstIdx.Write(input:=0);
  
END_FUNCTION
