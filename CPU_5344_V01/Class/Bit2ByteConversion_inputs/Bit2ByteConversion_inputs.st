//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "Bit2ByteConversion_inputs"
	Revision           = "0.1"
	GUID               = "{57B6FB55-2E1D-4B81-9E52-C7CC98EC8F28}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(450,2040)">
	<Channels>
		<Server Name="Bit1" GUID="{B114C4C0-55CE-4160-B735-3F10581E283A}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit10" GUID="{4C434329-3B90-4132-9585-129481F150A1}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit11" GUID="{6ED3336C-4A7D-46EE-B4DC-319AEACB84F2}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit12" GUID="{9D77A9DE-40EE-4600-88A1-DD92806B5C8C}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit13" GUID="{48A7F8D1-7102-4591-8564-308220D395E8}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit14" GUID="{26502B14-9114-4996-A330-58ABE314FCFA}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit15" GUID="{4AA035DA-6A5F-4361-9577-7296025DB781}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit16" GUID="{CC635D27-0176-41C7-B641-A65482D28B1A}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit17" GUID="{5B8D6761-D3AA-4638-8551-B25818CDEBA5}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit18" GUID="{7FECA97F-5F45-4A07-B280-C7C3526E3660}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit19" GUID="{D14CD6FB-11BE-4682-ABD1-764BD76B0075}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit2" GUID="{32CAB258-2CE3-478C-9841-550A8DC23D99}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit20" GUID="{2289EE43-5688-4F6E-88C3-14B1F4D541C1}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit21" GUID="{CF9AEC0F-4E35-46A1-AE15-EF6465E851BA}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit22" GUID="{DD5A79C3-4BB1-475E-A506-4AE2428203F8}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit23" GUID="{56175B8F-5FF1-4BED-BB3F-F513B807D337}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit24" GUID="{8CE66FE1-CEA3-4FE9-A413-DE1D72BF5E24}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit25" GUID="{E2F2403F-E429-4591-A19D-E4B9EF48ED84}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit26" GUID="{2FC5587A-882D-4D34-9688-72595A480337}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit27" GUID="{9591769D-A5CE-4C1C-8C6A-6A70DED62603}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit28" GUID="{25D984E8-E996-4FFF-9F25-35C425A0C9DB}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit29" GUID="{D485DCFB-C7A7-4C6A-BCC9-620CE3BA7986}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit3" GUID="{6BBBF9BE-CFCC-4B86-9C66-0E6D6BE785E4}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit30" GUID="{222546B8-3AC6-4129-98CE-146E744DF80B}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit31" GUID="{064A6243-84CF-427D-BEBF-BB8D7430765E}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit32" GUID="{858515C5-4C6C-450B-AE7D-1DDDF5C7AFE7}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit4" GUID="{B0C02173-5B86-42BE-8C6A-6953648028E3}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit5" GUID="{40BBEBC1-FA01-4356-B614-B11985A9CD5D}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit6" GUID="{07D9044C-ACF4-4D96-A26A-1871BBB5210B}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit7" GUID="{4B2C435C-93B0-4A3E-AF8F-525CB6362A37}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit8" GUID="{DEFD6B57-3746-43AC-A9C0-FF097ECE9A32}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Bit9" GUID="{9DB97499-BD45-4C49-A63D-B3C62A7D000D}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="BitValue" GUID="{820518F5-22B7-4CF9-A51B-3042BE04986A}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Client Name="Inv1" Required="false" Internal="false"/>
		<Client Name="Inv10" Required="false" Internal="false"/>
		<Client Name="Inv11" Required="false" Internal="false"/>
		<Client Name="Inv12" Required="false" Internal="false"/>
		<Client Name="Inv13" Required="false" Internal="false"/>
		<Client Name="Inv14" Required="false" Internal="false"/>
		<Client Name="Inv15" Required="false" Internal="false"/>
		<Client Name="Inv16" Required="false" Internal="false"/>
		<Client Name="Inv17" Required="false" Internal="false"/>
		<Client Name="Inv18" Required="false" Internal="false"/>
		<Client Name="Inv19" Required="false" Internal="false"/>
		<Client Name="Inv2" Required="false" Internal="false"/>
		<Client Name="Inv20" Required="false" Internal="false"/>
		<Client Name="Inv21" Required="false" Internal="false"/>
		<Client Name="Inv22" Required="false" Internal="false"/>
		<Client Name="Inv23" Required="false" Internal="false"/>
		<Client Name="Inv24" Required="false" Internal="false"/>
		<Client Name="Inv25" Required="false" Internal="false"/>
		<Client Name="Inv26" Required="false" Internal="false"/>
		<Client Name="Inv27" Required="false" Internal="false"/>
		<Client Name="Inv28" Required="false" Internal="false"/>
		<Client Name="Inv29" Required="false" Internal="false"/>
		<Client Name="Inv3" Required="false" Internal="false"/>
		<Client Name="Inv30" Required="false" Internal="false"/>
		<Client Name="Inv31" Required="false" Internal="false"/>
		<Client Name="Inv32" Required="false" Internal="false"/>
		<Client Name="Inv4" Required="false" Internal="false"/>
		<Client Name="Inv5" Required="false" Internal="false"/>
		<Client Name="Inv6" Required="false" Internal="false"/>
		<Client Name="Inv7" Required="false" Internal="false"/>
		<Client Name="Inv8" Required="false" Internal="false"/>
		<Client Name="Inv9" Required="false" Internal="false"/>
	</Channels>
	<RevDoku>
		<Owner Company="Intecon" Author="Richard Fierkens"/>
		<Dokumentation Revision="0.1" Date="2011-12-28" Author="Richard Fierkens" Company="Intecon" Description="Write timedelay is removed.&#13;&#10;Read timedelay is set to 10mSec."/>
		<Dokumentation Revision="0.0" Date="2011-12-27" Author="Johan Embregts" Company="SigmaControl" Description="Created."/>
	</RevDoku>
</Class>
*)
Bit2ByteConversion_inputs : CLASS
  //Servers:
	BitValue 	: SvrChCmd_BDINT;
	Bit1 	: SvrCh_DINT;
	Bit2 	: SvrCh_DINT;
	Bit3 	: SvrCh_DINT;
	Bit4 	: SvrCh_DINT;
	Bit5 	: SvrCh_DINT;
	Bit6 	: SvrCh_DINT;
	Bit7 	: SvrCh_DINT;
	Bit8 	: SvrCh_DINT;
	Bit9 	: SvrCh_DINT;
	Bit10 	: SvrCh_DINT;
	Bit11 	: SvrCh_DINT;
	Bit12 	: SvrCh_DINT;
	Bit13 	: SvrCh_DINT;
	Bit14 	: SvrCh_DINT;
	Bit15 	: SvrCh_DINT;
	Bit16 	: SvrCh_DINT;
	Bit17 	: SvrCh_DINT;
	Bit18 	: SvrCh_DINT;
	Bit19 	: SvrCh_DINT;
	Bit20 	: SvrCh_DINT;
	Bit21 	: SvrCh_DINT;
	Bit22 	: SvrCh_DINT;
	Bit23 	: SvrCh_DINT;
	Bit24 	: SvrCh_DINT;
	Bit25 	: SvrCh_DINT;
	Bit26 	: SvrCh_DINT;
	Bit27 	: SvrCh_DINT;
	Bit28 	: SvrCh_DINT;
	Bit29 	: SvrCh_DINT;
	Bit30 	: SvrCh_DINT;
	Bit31 	: SvrCh_DINT;
	Bit32 	: SvrCh_DINT;
  //Clients:
	Inv1 	: CltCh_DINT;
	Inv2 	: CltCh_DINT;
	Inv3 	: CltCh_DINT;
	Inv4 	: CltCh_DINT;
	Inv5 	: CltCh_DINT;
	Inv6 	: CltCh_DINT;
	Inv7 	: CltCh_DINT;
	Inv8 	: CltCh_DINT;
	Inv9 	: CltCh_DINT;
	Inv10 	: CltCh_DINT;
	Inv11 	: CltCh_DINT;
	Inv12 	: CltCh_DINT;
	Inv13 	: CltCh_DINT;
	Inv14 	: CltCh_DINT;
	Inv15 	: CltCh_DINT;
	Inv16 	: CltCh_DINT;
	Inv17 	: CltCh_DINT;
	Inv18 	: CltCh_DINT;
	Inv19 	: CltCh_DINT;
	Inv20 	: CltCh_DINT;
	Inv21 	: CltCh_DINT;
	Inv22 	: CltCh_DINT;
	Inv23 	: CltCh_DINT;
	Inv24 	: CltCh_DINT;
	Inv25 	: CltCh_DINT;
	Inv26 	: CltCh_DINT;
	Inv27 	: CltCh_DINT;
	Inv28 	: CltCh_DINT;
	Inv29 	: CltCh_DINT;
	Inv30 	: CltCh_DINT;
	Inv31 	: CltCh_DINT;
	Inv32 	: CltCh_DINT;
  //Variables:
		tMark 	: UDINT;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION VIRTUAL GLOBAL BitValue::Write
		VAR_INPUT
			input (EAX) 	: BDINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: BDINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB Bit2ByteConversion_inputs::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_BIT2BYTECONVERSION_INPUTS
0$UINT, 1$UINT, (SIZEOF(::Bit2ByteConversion_inputs))$UINT, 
33$UINT, 32$UINT, 0$UINT, 
TO_UDINT(1740382253), "Bit2ByteConversion_inputs", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::Bit2ByteConversion_inputs.BitValue.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(1679232299), "BitValue", 
(::Bit2ByteConversion_inputs.Bit1.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3759890831), "Bit1", 
(::Bit2ByteConversion_inputs.Bit2.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2031235125), "Bit2", 
(::Bit2ByteConversion_inputs.Bit3.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(236257443), "Bit3", 
(::Bit2ByteConversion_inputs.Bit4.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2423362816), "Bit4", 
(::Bit2ByteConversion_inputs.Bit5.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3883312534), "Bit5", 
(::Bit2ByteConversion_inputs.Bit6.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2122314796), "Bit6", 
(::Bit2ByteConversion_inputs.Bit7.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(158909626), "Bit7", 
(::Bit2ByteConversion_inputs.Bit8.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2580011307), "Bit8", 
(::Bit2ByteConversion_inputs.Bit9.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(4005620157), "Bit9", 
(::Bit2ByteConversion_inputs.Bit10.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2302434033), "Bit10", 
(::Bit2ByteConversion_inputs.Bit11.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(4265306727), "Bit11", 
(::Bit2ByteConversion_inputs.Bit12.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1731345373), "Bit12", 
(::Bit2ByteConversion_inputs.Bit13.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(271911755), "Bit13", 
(::Bit2ByteConversion_inputs.Bit14.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2387713768), "Bit14", 
(::Bit2ByteConversion_inputs.Bit15.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(4183207550), "Bit15", 
(::Bit2ByteConversion_inputs.Bit16.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1616904132), "Bit16", 
(::Bit2ByteConversion_inputs.Bit17.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(391696210), "Bit17", 
(::Bit2ByteConversion_inputs.Bit18.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2280116931), "Bit18", 
(::Bit2ByteConversion_inputs.Bit19.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(4041269845), "Bit19", 
(::Bit2ByteConversion_inputs.Bit20.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2719025458), "Bit20", 
(::Bit2ByteConversion_inputs.Bit21.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3575003556), "Bit21", 
(::Bit2ByteConversion_inputs.Bit22.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1277126686), "Bit22", 
(::Bit2ByteConversion_inputs.Bit23.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(991451272), "Bit23", 
(::Bit2ByteConversion_inputs.Bit24.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2776419627), "Bit24", 
(::Bit2ByteConversion_inputs.Bit25.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3531341245), "Bit25", 
(::Bit2ByteConversion_inputs.Bit26.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1265806343), "Bit26", 
(::Bit2ByteConversion_inputs.Bit27.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1014340753), "Bit27", 
(::Bit2ByteConversion_inputs.Bit28.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2898952448), "Bit28", 
(::Bit2ByteConversion_inputs.Bit29.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3687690646), "Bit29", 
(::Bit2ByteConversion_inputs.Bit30.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3138009203), "Bit30", 
(::Bit2ByteConversion_inputs.Bit31.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3423406309), "Bit31", 
(::Bit2ByteConversion_inputs.Bit32.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1426348383), "Bit32", 
//Clients:
(::Bit2ByteConversion_inputs.Inv1.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(6525577), "Inv1", 
(::Bit2ByteConversion_inputs.Inv2.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(2573910835), "Inv2", 
(::Bit2ByteConversion_inputs.Inv3.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(4000183205), "Inv3", 
(::Bit2ByteConversion_inputs.Inv4.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(1879664134), "Inv4", 
(::Bit2ByteConversion_inputs.Inv5.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(118380176), "Inv5", 
(::Bit2ByteConversion_inputs.Inv6.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(2651260714), "Inv6", 
(::Bit2ByteConversion_inputs.Inv7.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(3909105596), "Inv7", 
(::Bit2ByteConversion_inputs.Inv8.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(2042571309), "Inv8", 
(::Bit2ByteConversion_inputs.Inv9.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(246946491), "Inv9", 
(::Bit2ByteConversion_inputs.Inv10.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(1623164727), "Inv10", 
(::Bit2ByteConversion_inputs.Inv11.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(397981601), "Inv11", 
(::Bit2ByteConversion_inputs.Inv12.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(2394023451), "Inv12", 
(::Bit2ByteConversion_inputs.Inv13.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(4189509261), "Inv13", 
(::Bit2ByteConversion_inputs.Inv14.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(1741833006), "Inv14", 
(::Bit2ByteConversion_inputs.Inv15.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(282424248), "Inv15", 
(::Bit2ByteConversion_inputs.Inv16.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(2312905218), "Inv16", 
(::Bit2ByteConversion_inputs.Inv17.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(4275770004), "Inv17", 
(::Bit2ByteConversion_inputs.Inv18.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(1852051205), "Inv18", 
(::Bit2ByteConversion_inputs.Inv19.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(425934739), "Inv19", 
(::Bit2ByteConversion_inputs.Inv20.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(1267913972), "Inv20", 
(::Bit2ByteConversion_inputs.Inv21.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(1016456290), "Inv21", 
(::Bit2ByteConversion_inputs.Inv22.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(2778510808), "Inv22", 
(::Bit2ByteConversion_inputs.Inv23.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(3533407566), "Inv23", 
(::Bit2ByteConversion_inputs.Inv24.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(1291784429), "Inv24", 
(::Bit2ByteConversion_inputs.Inv25.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(1006116987), "Inv25", 
(::Bit2ByteConversion_inputs.Inv26.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(2733732289), "Inv26", 
(::Bit2ByteConversion_inputs.Inv27.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(3589685591), "Inv27", 
(::Bit2ByteConversion_inputs.Inv28.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(1162435782), "Inv28", 
(::Bit2ByteConversion_inputs.Inv29.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(844000336), "Inv29", 
(::Bit2ByteConversion_inputs.Inv30.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(1384768949), "Inv30", 
(::Bit2ByteConversion_inputs.Inv31.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(630117667), "Inv31", 
(::Bit2ByteConversion_inputs.Inv32.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(3162997913), "Inv32", 
END_FUNCTION


#define USER_CNT_Bit2ByteConversion_inputs 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_Bit2ByteConversion_inputs] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION Bit2ByteConversion_inputs::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_Bit2ByteConversion_inputs, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Write		:= #Write();
	vmt.CmdTable.Init		:= #Init();
	BitValue.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF BitValue.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit1.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit1.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit2.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit2.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit3.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit3.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit4.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit4.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit5.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit5.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit6.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit6.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit7.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit7.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit8.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit8.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit9.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit9.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit10.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit10.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit11.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit11.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit12.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit12.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit13.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit13.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit14.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit14.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit15.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit15.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit16.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit16.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit17.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit17.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit18.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit18.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit19.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit19.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit20.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit20.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit21.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit21.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit22.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit22.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit23.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit23.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit24.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit24.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit25.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit25.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit26.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit26.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit27.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit27.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit28.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit28.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit29.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit29.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit30.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit30.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit31.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit31.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Bit32.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Bit32.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION
FUNCTION VIRTUAL GLOBAL Bit2ByteConversion_inputs::BitValue::Write
	VAR_INPUT
		input (EAX) 	: BDINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: BDINT;
	END_VAR

	BitValue := input;
  
  Inv1 := Inv1.Read();
  Inv2 := Inv2.Read();
  Inv3 := Inv3.Read();
  Inv4 := Inv4.Read();
  Inv5 := Inv5.Read();
  Inv6 := Inv6.Read();
  Inv7 := Inv7.Read();
  Inv8 := Inv8.Read();
  Inv9 := Inv9.Read();
  Inv10 := Inv10.Read();
  Inv11 := Inv11.Read();
  Inv12 := Inv12.Read();
  Inv13 := Inv13.Read();
  Inv14 := Inv14.Read();
  Inv15 := Inv15.Read();
  Inv16 := Inv16.Read();
  Inv17 := Inv17.Read();
  Inv18 := Inv18.Read();
  Inv19 := Inv19.Read();
  Inv20 := Inv20.Read();
  Inv21 := Inv21.Read();
  Inv22 := Inv22.Read();
  Inv23 := Inv23.Read();
  Inv24 := Inv24.Read();
  Inv25 := Inv25.Read();
  Inv26 := Inv26.Read();
  Inv27 := Inv27.Read();
  Inv28 := Inv28.Read();
  Inv29 := Inv29.Read();
  Inv30 := Inv30.Read();
  Inv31 := Inv31.Read();
  Inv32 := Inv32.Read();
  
  Bit1 := abs(BitValue.1 - Inv1);
  Bit2 := abs(BitValue.2 - Inv2);
  Bit3 := abs(BitValue.3 - Inv3);
  Bit4 := abs(BitValue.4 - Inv4);
  Bit5 := abs(BitValue.5 - Inv5);
  Bit6 := abs(BitValue.6 - Inv6);
  Bit7 := abs(BitValue.7 - Inv7);
  Bit8 := abs(BitValue.8 - Inv8);
  Bit9 := abs(BitValue.9 - Inv9);
  Bit10 := abs(BitValue.10 - Inv10);
  Bit11 := abs(BitValue.11 - Inv11);
  Bit12 := abs(BitValue.12 - Inv12);
  Bit13 := abs(BitValue.13 - Inv13);
  Bit14 := abs(BitValue.14 - Inv14);
  Bit15 := abs(BitValue.15 - Inv15);
  Bit16 := abs(BitValue.16 - Inv16);
  Bit17 := abs(BitValue.17 - Inv17);
  Bit18 := abs(BitValue.18 - Inv18);
  Bit19 := abs(BitValue.19 - Inv19);  
  Bit20 := abs(BitValue.20 - Inv20);
  Bit21 := abs(BitValue.21 - Inv21);
  Bit22 := abs(BitValue.22 - Inv22);
  Bit23 := abs(BitValue.23 - Inv23);
  Bit24 := abs(BitValue.24 - Inv24);
  Bit25 := abs(BitValue.25 - Inv25);
  Bit26 := abs(BitValue.26 - Inv26);
  Bit27 := abs(BitValue.27 - Inv27);
  Bit28 := abs(BitValue.28 - Inv28);
  Bit29 := abs(BitValue.29 - Inv29);
  Bit30 := abs(BitValue.30 - Inv30);
  Bit31 := abs(BitValue.31 - Inv31);
  Bit32 := abs(BitValue.32 - Inv32);
  
  
  
  
	result := BitValue;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL Bit2ByteConversion_inputs::Init

  BitValue.Write(input:=0);

END_FUNCTION
