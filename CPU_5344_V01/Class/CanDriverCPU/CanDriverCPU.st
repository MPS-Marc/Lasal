//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "CanDriverCPU"
	Revision           = "0.3"
	GUID               = "{A32D83B7-EFDE-4FCE-98F3-D7697E08515C}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(332,120)">
	<Channels>
		<Client Name="_CanLib0" Required="true" Internal="true"/>
	</Channels>
	<RevDoku>
		<Owner Company="SigmaContol" Author="Johan Embregts"/>
		<Dokumentation Revision="0.3" Date="2014-02-03" Author="Johan Embregts" Company="SigmaContol" Description="Adapted to new Revision of &quot;CanDriverBase&quot; Rev 1.0 or higher."/>
	</RevDoku>
	<Network Name="CanDriverCPU">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_base"
				GUID       = "{F726EE06-7B7B-4D84-84C2-A45BEBB45F43}"
				Class      = "CanDriverBase"
				Position   = "(570,120)"
				Visualized = "true">
				<Channels>
					<Server Name="CobId"/>
					<Server Name="Command"/>
					<Server Name="ErrCntr"/>
					<Server Name="Status"/>
					<Client Name="CanChannel"/>
					<Client Name="cBaudrate"/>
					<Client Name="HwSelector" Value="CanDriverBase::CAN_conv"/>
					<Client Name="IrqChannel"/>
				</Channels>
			</Object>
			<Object
				Name       = "_CanLib0"
				GUID       = "{777082AF-C7C5-4C96-A8A9-1E951BD20087}"
				Class      = "_CanLib"
				Position   = "(180,120)"
				Visualized = "true">
				<Channels>
					<Server Name="CanBus" Value="1"/>
					<Server Name="Command"/>
					<Client Name="To_Can"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="_base.CanChannel" Destination="_CanLib0.Command" Vertices="(570,210),(510,210),"/>
			<Connection Source="_base.cBaudrate" Destination="this.cBaudrate" Vertices="(570,270),(38,210),"/>
			<Connection Source="_base.IrqChannel" Destination="this.IrqChannel" Vertices="(570,390),(38,270),"/>
			<Connection Source="this.Command" Destination="_base.Command" Vertices="(1042,210),(870,210),"/>
			<Connection Source="this.Status" Destination="_base.Status" Vertices="(1042,270),(870,330),"/>
			<Connection Source="this._CanLib0" Destination="_CanLib0.Command"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
#pragma using CanDriverBase

CanDriverCPU : CLASS
: CanDriverBase
  //Servers:
  //Clients:
	_CanLib0 	: CltChCmd__CanLib;
  //Variables:
  //Functions:
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma using _CanLib


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB CanDriverCPU::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_CANDRIVERCPU
0$UINT, 3$UINT, (SIZEOF(::CanDriverCPU))$UINT, 
0$UINT, 1$UINT, 0$UINT, 
TO_UDINT(383120389), "CanDriverCPU", //Class
TO_UDINT(1472885325), "CanDriverBase", 1$UINT, 3$UINT, //Baseclass
//Servers:
//Clients:
(::CanDriverCPU._CanLib0.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(4112458471), "_CanLib0", TO_UDINT(529317953), "_CanLib", 1$UINT, 10$UINT, 
END_FUNCTION


#define USER_CNT_CanDriverCPU 5

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_CanDriverCPU] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION CanDriverCPU::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
		nCmdSize	: UINT;
	END_VAR

	ret_code	:= CanDriverBase::@STD();
	IF ret_code <> C_OK THEN
		RETURN;
	END_IF;
	nCmdSize		:= CanDriverBase::Command.pMeth^.nCmds$UINT*SIZEOF(pVoid) + CMDMETH.Init;

	_memcpy((#vmt.CmdTable)$^USINT, CanDriverBase::Command.pMeth, nCmdSize);
	vmt.CmdTable.nCmds		:= nSTDCMD + USER_CNT_CanDriverCPU;
	CanDriverBase::Command.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF CanDriverBase::Command.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION

