//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "Invert"
	Revision           = "0.0"
	GUID               = "{322EFD4C-C744-4EF3-976A-082E43D4F181}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(300,180)">
	<Channels>
		<Server Name="ClassSvr" GUID="{1587BD38-4ED1-4739-9161-8A2D7F5C0363}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="InvertUit" GUID="{A17A57A4-A950-4841-AA5B-5E1385C2A67D}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="SRam"/>
		<Client Name="Client" Required="true" Internal="false"/>
	</Channels>
</Class>
*)
Invert : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
	InvertUit 	: SvrCh_DINT;
  //Clients:
	Client 	: CltCh_DINT;
  //Variables:
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL ClassSvr::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB Invert::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_INVERT
0$UINT, 0$UINT, (SIZEOF(::Invert))$UINT, 
2$UINT, 1$UINT, 0$UINT, 
TO_UDINT(48933185), "Invert", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::Invert.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
(::Invert.InvertUit.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000001000$UINT, TO_UDINT(2529804251), "InvertUit", 
//Clients:
(::Invert.Client.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(935117779), "Client", 
END_FUNCTION


#define USER_CNT_Invert 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_Invert] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION Invert::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_Invert, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Read		:= #Read();
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	InvertUit.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF InvertUit.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL Invert::ClassSvr::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR
  Client := Client.Read();
  if InvertUit = 0 then
    if Client = 1 then
      ClassSvr := 0;
    else
      ClassSvr := 1;
    end_if;
  else
    ClassSvr := Client;
  end_if;
	output := ClassSvr;

END_FUNCTION
