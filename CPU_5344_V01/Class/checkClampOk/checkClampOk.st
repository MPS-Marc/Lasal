//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "checkClampOk"
	Revision           = "0.0"
	GUID               = "{7328BEE1-6D99-4ABE-AE87-609CD20D9229}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(284,120)">
	<Channels>
		<Server Name="ClassSvr" GUID="{313570FB-B805-45DE-8D03-3B695FC62458}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Client Name="iActState" Required="true" Internal="false"/>
		<Client Name="sShouldBeState" Required="true" Internal="false"/>
	</Channels>
</Class>
*)
checkClampOk : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
  //Clients:
	iActState 	: CltCh_cilPos;
	sShouldBeState 	: CltCh_cilPos;
  //Variables:
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL ClassSvr::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB checkClampOk::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_CHECKCLAMPOK
0$UINT, 0$UINT, (SIZEOF(::checkClampOk))$UINT, 
1$UINT, 2$UINT, 0$UINT, 
TO_UDINT(1075824592), "checkClampOk", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::checkClampOk.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
//Clients:
(::checkClampOk.iActState.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(18260434), "iActState", 
(::checkClampOk.sShouldBeState.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(2582022600), "sShouldBeState", 
END_FUNCTION


#define USER_CNT_checkClampOk 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_checkClampOk] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION checkClampOk::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_checkClampOk, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Read		:= #Read();
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION
// JdK 12-6-2019 created for Traffiroad 4284/standard lib
// simple class to check if a cilinder is in the state it should be te be ok


FUNCTION VIRTUAL GLOBAL checkClampOk::ClassSvr::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

  iActState:=iActState.Read();
  sShouldBeState:=sShouldBeState.Read();
  
  IF iActState=sShouldBeState THEN
    ClassSvr:=1;
  ELSE
    ClassSvr:=0;
  END_IF;

	output := ClassSvr;

END_FUNCTION
