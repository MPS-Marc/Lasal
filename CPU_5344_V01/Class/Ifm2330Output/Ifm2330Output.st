//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "Ifm2330Output"
	Revision           = "0.0"
	GUID               = "{C4F2F2D0-4E80-4694-BC77-14FEA86C73A6}"
	RealtimeTask       = "false"
	CyclicTask         = "true"
	DefCyclictime      = "2 ms"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(660,960)">
	<Channels>
		<Server Name="ActualMode" GUID="{0C8D097C-A91F-4E04-B2D6-269D31BFE4AB}" Visualized="true" Remotely="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Shows the currently active mode of the device (is only valid when the ClassState is _ClassOk and the FaultFlags are on _NoFault)"/>
		<Server Name="ClassState" GUID="{410B2074-247B-48A5-908F-03AC2295385A}" Class="SDCIDevice" Visualized="true" Remotely="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Shows the current Status of the Hardware Class"/>
		<Server Name="ClassSvr" GUID="{60D2AF88-6E34-4AEE-A26E-7A681285E614}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Output1" GUID="{DB0205D0-3AE6-48FA-95BD-8F98DEA4F368}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Output10" GUID="{833947A0-DF70-40B1-951F-3F37D03249AD}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Output11" GUID="{501C9276-F921-4DF5-BA68-A09A447F497B}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Output12" GUID="{F9DC0A50-CB1D-455F-8723-1E822601963D}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Output2" GUID="{4170BA34-FF02-480C-9447-8851C67DFCC1}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Output3" GUID="{D5445EA6-668E-4D65-8E57-6BC70563F28E}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Output4" GUID="{1CFF8447-067D-41C4-84E4-12F909A4456D}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Output5" GUID="{37E7B878-2D01-49D1-A62F-F010532BE729}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Output6" GUID="{F1BC46FE-25EA-4BB3-BD07-520E84707945}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Output7" GUID="{36702548-2389-4E95-8EB2-FE03F6968B93}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Output8" GUID="{DE355434-9042-4F6E-844E-51FDA0688FA9}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Output9" GUID="{89CCA079-D5FC-4AF3-88D1-A94F9A89F5F6}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Client Name="SDCIClass" Required="true" Internal="true"/>
		<Client Name="SdciIn" Required="false" Internal="false"/>
	</Channels>
	<Network Name="Ifm2330Output">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "SDCIClass"
				GUID       = "{721B2861-6097-44C9-8768-B1749CFBE8D7}"
				Class      = "SDCIClassIFM2330"
				Position   = "(150,120)"
				Visualized = "true"
				Remotely   = "true">
				<Channels>
					<Server Name="ActualMode"/>
					<Server Name="ClassState"/>
					<Server Name="DeviceID"/>
					<Server Name="DirectInput"/>
					<Server Name="FaultFlags"/>
					<Server Name="Input"/>
					<Server Name="MinCycleTime"/>
					<Server Name="NbrOfEventsAvailable"/>
					<Server Name="Output"/>
					<Server Name="PortStateBits"/>
					<Server Name="VendorID"/>
					<Client Name="ReadPdoSize" Value="64"/>
					<Client Name="Required" Value="0"/>
					<Client Name="SdciIn"/>
					<Client Name="SkipEndianSwap" Value="0"/>
					<Client Name="StartUpMode" Value="_SDCI"/>
					<Client Name="WritePdoSize" Value="32"/>
				</Channels>
				<AdditionalData>
					<Entry Name="DeviceType" Value="SDCIClassIFM2330"/>
				</AdditionalData>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="SDCIClass.SdciIn" Destination="this.SdciIn" Vertices="(150,210),(38,210),"/>
			<Connection Source="this.ClassState" Destination="SDCIClass.ClassState" Vertices="(990,270),(818,210),"/>
			<Connection Source="this.SDCIClass" Destination="SDCIClass.ClassState"/>
			<Connection Source="this.ActualMode" Destination="SDCIClass.ActualMode" Vertices="(990,330),(818,450),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
Ifm2330Output : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
	ClassState 	: SvrChCmd_t_e_VaranErrors;
	ActualMode 	: SvrCh_t_SDCIPortMode_PTofCls_SdiasSDCIMaster;
	Output1 	: SvrCh_DINT;
	Output2 	: SvrCh_DINT;
	Output3 	: SvrCh_DINT;
	Output4 	: SvrCh_DINT;
	Output5 	: SvrCh_DINT;
	Output6 	: SvrCh_DINT;
	Output7 	: SvrCh_DINT;
	Output8 	: SvrCh_DINT;
	Output9 	: SvrCh_DINT;
	Output10 	: SvrCh_DINT;
	Output11 	: SvrCh_DINT;
	Output12 	: SvrCh_DINT;
  //Clients:
	SdciIn 	: CltChCmd_DINT;
	SDCIClass 	: CltChCmd_SDCIClassIFM2330;
  //Variables:
		bdOutputs : BDINT
		[
		];

  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION VIRTUAL GLOBAL CyWork
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL ClassState::Read
		VAR_OUTPUT
			output (EAX) 	: t_e_VaranErrors;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL ActualMode::Read
		VAR_OUTPUT
			output (EAX) 	: SdiasSDCIMaster::t_SDCIPortMode;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma using SDCIClassIFM2330


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB Ifm2330Output::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_IFM2330OUTPUT
0$UINT, 0$UINT, (SIZEOF(::Ifm2330Output))$UINT, 
15$UINT, 2$UINT, 0$UINT, 
TO_UDINT(2727458396), "Ifm2330Output", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::Ifm2330Output.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
(::Ifm2330Output.ClassState.pMeth)$UINT, _CH_SVR_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(1096059024), "ClassState", 
(::Ifm2330Output.ActualMode.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(208673156), "ActualMode", 
(::Ifm2330Output.Output1.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2425114930), "Output1", 
(::Ifm2330Output.Output2.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(159711368), "Output2", 
(::Ifm2330Output.Output3.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2122461214), "Output3", 
(::Ifm2330Output.Output4.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3773212093), "Output4", 
(::Ifm2330Output.Output5.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2548143403), "Output5", 
(::Ifm2330Output.Output6.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(250135697), "Output6", 
(::Ifm2330Output.Output7.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2045768711), "Output7", 
(::Ifm2330Output.Output8.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3914394006), "Output8", 
(::Ifm2330Output.Output9.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2656557312), "Output9", 
(::Ifm2330Output.Output10.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1016857328), "Output10", 
(::Ifm2330Output.Output11.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1268462182), "Output11", 
(::Ifm2330Output.Output12.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3532809180), "Output12", 
//Clients:
(::Ifm2330Output.SdciIn.pCh)$UINT, _CH_CLT_CMD$UINT, 2#0000000000000100$UINT, TO_UDINT(3500080180), "SdciIn", 
(::Ifm2330Output.SDCIClass.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(2173222264), "SDCIClass", TO_UDINT(914362568), "SDCIClassIFM2330", 0$UINT, 0$UINT, 
END_FUNCTION


#define USER_CNT_Ifm2330Output 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_Ifm2330Output] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION Ifm2330Output::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_Ifm2330Output, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Init		:= #Init();
	vmt.CmdTable.CyWork		:= #CyWork();
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	_memcpy((#vmt.CmdTable)$^USINT, ClassState.pMeth, SIZEOF(CMDMETH));
	vmt.CmdTable.nCmds		:= nSTDCMD;
	vmt.CmdTable.Read		:= #ClassState::Read();
	ClassState.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassState.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	ActualMode.pMeth			:= StoreMethod( #ActualMode::Read(), #M_NO_F() );
	IF ActualMode.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Output1.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Output1.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Output2.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Output2.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Output3.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Output3.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Output4.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Output4.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Output5.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Output5.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Output6.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Output6.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Output7.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Output7.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Output8.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Output8.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Output9.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Output9.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Output10.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Output10.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Output11.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Output11.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Output12.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Output12.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION
//avdb 29092017 outputs io eiland IFM

FUNCTION VIRTUAL GLOBAL Ifm2330Output::CyWork
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR
  
  // get outputs from servers
  bdOutputs.25 := Output1=1;
  bdOutputs.9 := Output2=1;
  bdOutputs.17 := Output3=1;
  bdOutputs.1 := Output4=1;
  bdOutputs.26 := Output5=1;
  bdOutputs.10 := Output6=1;
  bdOutputs.18 := Output7=1;
  bdOutputs.2 := Output8=1;
  bdOutputs.27 := Output9=1;
  bdOutputs.11 := Output10=1;
  bdOutputs.19 := Output11=1;
  bdOutputs.3 := Output12=1;  

  // and write outputs to ifm splitterbox
  SDCIClass.SetWritePdoDWord(WriteValue:=bdOutputs, WriteOffset:=0);

	state := READY;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL Ifm2330Output::Init
 
END_FUNCTION


FUNCTION VIRTUAL GLOBAL Ifm2330Output::ClassState::Read
	VAR_OUTPUT
		output (EAX) 	: t_e_VaranErrors;
	END_VAR

	ClassState := SDCIClass.ClassState.Read();
	output := ClassState;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL Ifm2330Output::ActualMode::Read
	VAR_OUTPUT
		output (EAX) 	: SdiasSDCIMaster::t_SDCIPortMode;
	END_VAR

	ActualMode := SDCIClass.ActualMode.Read();
	output := ActualMode;

END_FUNCTION
