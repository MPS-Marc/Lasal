//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "MotorParamSettings"
	Revision           = "0.0"
	GUID               = "{1804CBC3-4E88-4F79-84F3-00061E28CC02}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "true"
	DefBackground      = "100 ms"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(510,780)"
	Comment            = "Object to save and change the most important parameters usually saved in the motorfile. On startup the object writes the parameters to the motorfile. ">
	<Channels>
		<Server Name="ClassSvr" GUID="{CA1B6F90-D02D-4ABD-9D2E-9EABC52FC4CC}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="FeedbOfffset" GUID="{062DF14A-F228-497A-BBF5-F2043446668A}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="P_KV" GUID="{CD903C30-E0B9-490E-A452-9D2FFB201D19}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="P_SFF" GUID="{86944AD4-F74D-49A2-B660-F6F7627415B6}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="P_SSCALE" GUID="{E252C4C3-3EAA-418D-BD1E-A3B16C08F838}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="P_TFF" GUID="{605BACAF-3667-4C66-9AB2-45504B28AE70}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="V_KP" GUID="{0ADAC2AD-8E1A-4772-ABB0-A533C4E69ED7}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="V_KPREL" GUID="{C04D5B65-D754-46B3-A6DD-844709F4DFB8}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="V_NMAX" GUID="{B28BE58E-C33D-45F2-AF72-C1C62605CC73}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="V_T" GUID="{AAE4C61C-859C-4A03-AE8E-E473C9797621}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="V_T2" GUID="{EE8B84EF-8B3B-45AD-A880-8D6118A466C1}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="V_TN" GUID="{B786B784-2FD2-43B3-BCCA-1BA5792EA1E8}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Client Name="_DriveMotorPara1" Required="true" Internal="true"/>
		<Client Name="_DrivePositionPara1" Required="true" Internal="true"/>
		<Client Name="_DriveSpeedPara1" Required="true" Internal="true"/>
		<Client Name="driveAxis" Required="false" Internal="false"/>
		<Client Name="SettingMotorX1" Required="true" Internal="true"/>
	</Channels>
	<Network Name="MotorParamSettings">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_DriveMotorPara1"
				GUID       = "{E277A830-4853-4CBA-90DB-7CC1BD217442}"
				Class      = "_DriveMotorPara"
				Position   = "(750,1200)"
				Visualized = "true"
				Remotely   = "true">
				<Channels>
					<Server Name="M_BRAKE"/>
					<Server Name="M_BRDIS"/>
					<Server Name="M_BREN"/>
					<Server Name="M_IFWEAK"/>
					<Server Name="M_IMAG"/>
					<Server Name="M_INULL"/>
					<Server Name="M_IPEAK"/>
					<Server Name="M_J"/>
					<Server Name="M_KN"/>
					<Server Name="M_L"/>
					<Server Name="M_NAME1"/>
					<Server Name="M_NAME2"/>
					<Server Name="M_NAME3"/>
					<Server Name="M_NMAX"/>
					<Server Name="M_POL"/>
					<Server Name="M_R"/>
					<Server Name="M_ROFF"/>
					<Server Name="M_RPOL"/>
					<Server Name="M_RPULSE"/>
					<Server Name="M_RTEMP"/>
					<Server Name="M_SER"/>
					<Server Name="M_TORQUE"/>
					<Server Name="M_TROT"/>
					<Server Name="M_TYPE"/>
					<Server Name="M_UBOOST"/>
					<Server Name="M_UN"/>
					<Server Name="State"/>
					<Client Name="DriveAxis"/>
					<Client Name="ErrorCode"/>
				</Channels>
			</Object>
			<Object
				Name       = "_DrivePositionPara1"
				GUID       = "{8AEF7492-E3D2-447F-9C48-54F48F73F602}"
				Class      = "_DrivePositionPara"
				Position   = "(750,120)"
				Visualized = "true"
				Remotely   = "true">
				<Channels>
					<Server Name="P_KV"/>
					<Server Name="P_PEMAX"/>
					<Server Name="P_PSCALE"/>
					<Server Name="P_SFF"/>
					<Server Name="P_SMODE"/>
					<Server Name="P_SSCALE"/>
					<Server Name="P_TFF"/>
					<Server Name="State"/>
					<Client Name="DriveAxis"/>
					<Client Name="ErrorCode"/>
				</Channels>
			</Object>
			<Object
				Name       = "_DriveSpeedPara1"
				GUID       = "{E27D24C4-01EC-44BC-8E54-BD1AF28C64E5}"
				Class      = "_DriveSpeedPara"
				Position   = "(750,660)"
				Visualized = "true"
				Remotely   = "true">
				<Channels>
					<Server Name="State"/>
					<Server Name="V_FILT"/>
					<Server Name="V_KP"/>
					<Server Name="V_KPREL"/>
					<Server Name="V_NMAX"/>
					<Server Name="V_T"/>
					<Server Name="V_T2"/>
					<Server Name="V_TN"/>
					<Client Name="DriveAxis"/>
					<Client Name="ErrorCode"/>
				</Channels>
			</Object>
			<Object
				Name           = "SettingMotorX1"
				GUID           = "{59881872-0005-4B6E-B66A-64304779C206}"
				Class          = "MotorParaBase"
				Position       = "(1800,90)"
				Visualized     = "true"
				BackgroundTime = "100 ms">
				<Channels>
					<Server Name="ClassSvr"/>
					<Server Name="FeedbOfffset"/>
					<Server Name="P_KV"/>
					<Server Name="P_SFF"/>
					<Server Name="P_SSCALE"/>
					<Server Name="P_TFF"/>
					<Server Name="Update"/>
					<Server Name="V_KP"/>
					<Server Name="V_KPREL"/>
					<Server Name="V_NMAX"/>
					<Server Name="V_T"/>
					<Server Name="V_T2"/>
					<Server Name="V_TN"/>
					<Client Name="MotPara"/>
					<Client Name="PositionPara"/>
					<Client Name="SpeedPara"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.SettingMotorX1" Destination="SettingMotorX1.ClassSvr"/>
			<Connection Source="SettingMotorX1.PositionPara" Destination="_DrivePositionPara1.State" Vertices="(1800,180),(1126,210),"/>
			<Connection Source="SettingMotorX1.SpeedPara" Destination="_DriveSpeedPara1.State" Vertices="(1800,240),(1124,750),"/>
			<Connection Source="SettingMotorX1.MotPara" Destination="_DriveMotorPara1.State" Vertices="(1800,300),(1204,1290),"/>
			<Connection Source="this.P_KV" Destination="SettingMotorX1.P_KV" Vertices="(2468,270),(2296,300),"/>
			<Connection Source="this.P_SFF" Destination="SettingMotorX1.P_SFF" Vertices="(2468,330),(2296,360),"/>
			<Connection Source="this.P_TFF" Destination="SettingMotorX1.P_TFF" Vertices="(2468,390),(2296,420),"/>
			<Connection Source="this.P_SSCALE" Destination="SettingMotorX1.P_SSCALE" Vertices="(2468,450),(2296,480),"/>
			<Connection Source="this.V_KP" Destination="SettingMotorX1.V_KP" Vertices="(2468,510),(2296,540),"/>
			<Connection Source="this.V_T" Destination="SettingMotorX1.V_T" Vertices="(2468,570),(2296,600),"/>
			<Connection Source="this.V_TN" Destination="SettingMotorX1.V_TN" Vertices="(2468,630),(2296,660),"/>
			<Connection Source="this.V_T2" Destination="SettingMotorX1.V_T2" Vertices="(2468,690),(2296,720),"/>
			<Connection Source="this.V_NMAX" Destination="SettingMotorX1.V_NMAX" Vertices="(2468,750),(2296,780),"/>
			<Connection Source="this.V_KPREL" Destination="SettingMotorX1.V_KPREL" Vertices="(2468,810),(2296,840),"/>
			<Connection Source="this.FeedbOfffset" Destination="SettingMotorX1.FeedbOfffset" Vertices="(2468,870),(2296,900),"/>
			<Connection Source="this._DriveMotorPara1" Destination="_DriveMotorPara1.State"/>
			<Connection Source="this._DrivePositionPara1" Destination="_DrivePositionPara1.State"/>
			<Connection Source="this._DriveSpeedPara1" Destination="_DriveSpeedPara1.State"/>
			<Connection Source="_DriveMotorPara1.DriveAxis" Destination="this.driveAxis" Vertices="(750,1290),(38,210),"/>
			<Connection Source="_DriveSpeedPara1.DriveAxis" Destination="this.driveAxis" Vertices="(750,750),(38,210),"/>
			<Connection Source="_DrivePositionPara1.DriveAxis" Destination="this.driveAxis" Vertices="(750,210),(30,210),(38,210),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
MotorParamSettings : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
	P_KV 	: SvrCh_DINT;
	P_SFF 	: SvrCh_DINT;
	P_TFF 	: SvrCh_DINT;
	P_SSCALE 	: SvrCh_DINT;
	V_KP 	: SvrCh_DINT;
	V_T 	: SvrCh_DINT;
	V_TN 	: SvrCh_DINT;
	V_T2 	: SvrCh_DINT;
	V_NMAX 	: SvrCh_DINT;
	V_KPREL 	: SvrCh_DINT;
	FeedbOfffset 	: SvrCh_DINT;
  //Clients:
	_DriveMotorPara1 	: CltChCmd__DriveMotorPara;
	_DrivePositionPara1 	: CltChCmd__DrivePositionPara;
	_DriveSpeedPara1 	: CltChCmd__DriveSpeedPara;
	driveAxis 	: CltChCmd__DriveAxisBase;
	SettingMotorX1 	: CltChCmd_MotorParaBase;
  //Variables:
		tStartTim 	: UDINT;
		dataLoaded 	: DINT;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Background
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL P_KV::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL P_KV::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL P_SFF::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL P_SFF::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL P_TFF::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL P_TFF::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL P_SSCALE::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL P_SSCALE::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL V_KP::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL V_KP::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL V_T::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL V_T::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL V_TN::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL V_TN::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL V_T2::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL V_T2::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL V_NMAX::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL V_NMAX::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL V_KPREL::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL V_KPREL::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL FeedbOfffset::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL FeedbOfffset::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma using _DriveMotorPara
#pragma using _DrivePositionPara
#pragma using _DriveSpeedPara
#pragma using MotorParaBase
#pragma usingLtd _DriveAxisBase


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB MotorParamSettings::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_MOTORPARAMSETTINGS
0$UINT, 0$UINT, (SIZEOF(::MotorParamSettings))$UINT, 
12$UINT, 5$UINT, 0$UINT, 
TO_UDINT(1810421489), "MotorParamSettings", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::MotorParamSettings.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
(::MotorParamSettings.P_KV.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(472701756), "P_KV", 
(::MotorParamSettings.P_SFF.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(976862189), "P_SFF", 
(::MotorParamSettings.P_TFF.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1064742248), "P_TFF", 
(::MotorParamSettings.P_SSCALE.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2998132609), "P_SSCALE", 
(::MotorParamSettings.V_KP.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3492028885), "V_KP", 
(::MotorParamSettings.V_T.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3327483750), "V_T", 
(::MotorParamSettings.V_TN.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3882947112), "V_TN", 
(::MotorParamSettings.V_T2.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3200397119), "V_T2", 
(::MotorParamSettings.V_NMAX.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1577944140), "V_NMAX", 
(::MotorParamSettings.V_KPREL.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1505989390), "V_KPREL", 
(::MotorParamSettings.FeedbOfffset.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(515752448), "FeedbOfffset", 
//Clients:
(::MotorParamSettings._DriveMotorPara1.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(3868344706), "_DriveMotorPara1", TO_UDINT(4269273944), "_DriveMotorPara", 1$UINT, 4$UINT, 
(::MotorParamSettings._DrivePositionPara1.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(3898820975), "_DrivePositionPara1", TO_UDINT(3572968528), "_DrivePositionPara", 1$UINT, 2$UINT, 
(::MotorParamSettings._DriveSpeedPara1.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(1835201028), "_DriveSpeedPara1", TO_UDINT(2960957186), "_DriveSpeedPara", 1$UINT, 2$UINT, 
(::MotorParamSettings.driveAxis.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000100$UINT, TO_UDINT(2080180789), "driveAxis", TO_UDINT(4124502522), "_DriveAxisBase", 1$UINT, 75$UINT, 
(::MotorParamSettings.SettingMotorX1.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(326952255), "SettingMotorX1", TO_UDINT(146447722), "MotorParaBase", 0$UINT, 0$UINT, 
END_FUNCTION


#define USER_CNT_MotorParamSettings 1

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_MotorParamSettings] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION MotorParamSettings::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_MotorParamSettings, pCmd := #vmt.CmdTable);
#pragma warning (disable : 74)
	vmt.UserFcts[0]		:= #Background();

#pragma warning (default : 74)
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	P_KV.pMeth			:= StoreMethod( #P_KV::Read(), #P_KV::Write() );
	IF P_KV.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	P_SFF.pMeth			:= StoreMethod( #P_SFF::Read(), #P_SFF::Write() );
	IF P_SFF.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	P_TFF.pMeth			:= StoreMethod( #P_TFF::Read(), #P_TFF::Write() );
	IF P_TFF.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	P_SSCALE.pMeth			:= StoreMethod( #P_SSCALE::Read(), #P_SSCALE::Write() );
	IF P_SSCALE.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	V_KP.pMeth			:= StoreMethod( #V_KP::Read(), #V_KP::Write() );
	IF V_KP.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	V_T.pMeth			:= StoreMethod( #V_T::Read(), #V_T::Write() );
	IF V_T.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	V_TN.pMeth			:= StoreMethod( #V_TN::Read(), #V_TN::Write() );
	IF V_TN.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	V_T2.pMeth			:= StoreMethod( #V_T2::Read(), #V_T2::Write() );
	IF V_T2.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	V_NMAX.pMeth			:= StoreMethod( #V_NMAX::Read(), #V_NMAX::Write() );
	IF V_NMAX.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	V_KPREL.pMeth			:= StoreMethod( #V_KPREL::Read(), #V_KPREL::Write() );
	IF V_KPREL.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	FeedbOfffset.pMeth			:= StoreMethod( #FeedbOfffset::Read(), #FeedbOfffset::Write() );
	IF FeedbOfffset.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL MotorParamSettings::P_KV::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	P_KV := SettingMotorX1.P_KV.Read();
	output := P_KV;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MotorParamSettings::P_KV::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	P_KV := input;
	result := (SettingMotorX1.P_KV.Write(P_KV))$DINT;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MotorParamSettings::P_SFF::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	P_SFF := SettingMotorX1.P_SFF.Read();
	output := P_SFF;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MotorParamSettings::P_SFF::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	P_SFF := input;
	result := (SettingMotorX1.P_SFF.Write(P_SFF))$DINT;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MotorParamSettings::P_TFF::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	P_TFF := SettingMotorX1.P_TFF.Read();
	output := P_TFF;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MotorParamSettings::P_TFF::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	P_TFF := input;
	result := (SettingMotorX1.P_TFF.Write(P_TFF))$DINT;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MotorParamSettings::P_SSCALE::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	P_SSCALE := SettingMotorX1.P_SSCALE.Read();
	output := P_SSCALE;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MotorParamSettings::P_SSCALE::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	P_SSCALE := input;
	result := (SettingMotorX1.P_SSCALE.Write(P_SSCALE))$DINT;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MotorParamSettings::V_KP::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	V_KP := SettingMotorX1.V_KP.Read();
	output := V_KP;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MotorParamSettings::V_KP::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	V_KP := input;
	result := (SettingMotorX1.V_KP.Write(V_KP))$DINT;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MotorParamSettings::V_T::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	V_T := SettingMotorX1.V_T.Read();
	output := V_T;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MotorParamSettings::V_T::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	V_T := input;
	result := (SettingMotorX1.V_T.Write(V_T))$DINT;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MotorParamSettings::V_TN::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	V_TN := SettingMotorX1.V_TN.Read();
	output := V_TN;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MotorParamSettings::V_TN::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	V_TN := input;
	result := (SettingMotorX1.V_TN.Write(V_TN))$DINT;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MotorParamSettings::V_T2::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	V_T2 := SettingMotorX1.V_T2.Read();
	output := V_T2;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MotorParamSettings::V_T2::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	V_T2 := input;
	result := (SettingMotorX1.V_T2.Write(V_T2))$DINT;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MotorParamSettings::V_NMAX::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	V_NMAX := SettingMotorX1.V_NMAX.Read();
	output := V_NMAX;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MotorParamSettings::V_NMAX::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	V_NMAX := input;
	result := (SettingMotorX1.V_NMAX.Write(V_NMAX))$DINT;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MotorParamSettings::V_KPREL::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	V_KPREL := SettingMotorX1.V_KPREL.Read();
	output := V_KPREL;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MotorParamSettings::V_KPREL::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	V_KPREL := input;
	result := (SettingMotorX1.V_KPREL.Write(V_KPREL))$DINT;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MotorParamSettings::FeedbOfffset::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	FeedbOfffset := SettingMotorX1.FeedbOfffset.Read();
	output := FeedbOfffset;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MotorParamSettings::FeedbOfffset::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	FeedbOfffset := input;
	result := (SettingMotorX1.FeedbOfffset.Write(FeedbOfffset))$DINT;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MotorParamSettings::Background
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR
  
  
  if _DriveSpeedPara1.State.Read() = READY  & _DrivePositionPara1.State.Read() = READY & _DriveMotorPara1.State.Read() = READY & dataLoaded = 0 then
     if tStartTim = 0 then
      tStartTim := ops.tAbsolute;
     elsif ops.tAbsolute - tStartTim > 1000 then
      SettingMotorX1.LoadWriteVal();
       dataLoaded := 1;
     end_if;
  end_If;
  
  

	state := READY;

END_FUNCTION
