//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "FubOnDelayTimer"
	Revision           = "1.0"
	GUID               = "{89A2FA22-E655-4EDD-88E4-9D21EB73C0AC}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(284,120)"
	Comment            = "The on-delay timer can be used to&#13;&#10;delay setting an output true, for&#13;&#10;a fixed period after an input becomes&#13;&#10;true.&#13;&#10; ">
	<Channels>
		<Server Name="sET" GUID="{A92EE2BE-16DD-4FA4-92E9-22478765802F}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false" Comment="elapsed time in ms"/>
		<Server Name="sQ1" GUID="{4075A984-AF95-4BFE-BBF1-358D8D2024A8}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false" Comment="Output"/>
		<Client Name="cIN" Required="false" Internal="false" Comment="Input"/>
		<Client Name="cPT" Required="false" Internal="false" Comment="delaytime in ms"/>
	</Channels>
</Class>
*)
FubOnDelayTimer : CLASS
  //Servers:
	sQ1 	: SvrChCmd_DINT;
	sET 	: SvrCh_DINT;
  //Clients:
	cIN 	: CltCh_DINT;
	cPT 	: CltCh_DINT;
  //Variables:
		merker 	: BOOL;
		timemark 	: UDINT;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL sQ1::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB FubOnDelayTimer::@CT_
0$UINT,
2#0100000000000000$UINT, //TY_FUBONDELAYTIMER
1$UINT, 0$UINT, (SIZEOF(::FubOnDelayTimer))$UINT, 
2$UINT, 2$UINT, 0$UINT, 
TO_UDINT(1751108965), "FubOnDelayTimer", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::FubOnDelayTimer.sQ1.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(1673864660), "sQ1", 
(::FubOnDelayTimer.sET.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1890805590), "sET", 
//Clients:
(::FubOnDelayTimer.cIN.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(1027764816), "cIN", 
(::FubOnDelayTimer.cPT.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(1528832562), "cPT", 
END_FUNCTION


#define USER_CNT_FubOnDelayTimer 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_FubOnDelayTimer] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION FubOnDelayTimer::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_FubOnDelayTimer, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Read		:= #Read();
	sQ1.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF sQ1.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION

//[#ENGLISH]
// ******************************************************************
//          TON - On delay timer
// ******************************************************************
//			CLIENT:
//			    cIN: input
//					cPT: output time in ms
//      SERVER:
//          sQ:  output
//          sET: elapsed time in ms
//
//   description:
//   The on-delay timer can be used to delay setting an output true,
//   for a fixed period after an input becomes true.
//   As input cIN goes true, the elapsed time at output sET starts to
//   increase. When the elapsed time reaches the time specified by 
//   the  input cPT, the output goes true, and the elapsed time is 
//   held.
//   The output sQ remains true until the input cIN goes false. If 
//   the input is not true longer than the delay time specified in 
//   cPT, the output remains false.
//
// ******************************************************************
// 		 created 		:		 AG		 :   	KW 38/05
// ******************************************************************
//                operation of READ function
// ******************************************************************
//   tested: AW | 05.10.2005 | Lasal2 v02.01.020 |
// ******************************************************************



FUNCTION VIRTUAL GLOBAL FubOnDelayTimer::sQ1::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR
  
  cIN := cIN.read(); 
  
  if (cIN = 0) then // = RESET
    merker 		:= false;
    sQ1	:= 0;
    sET	:= 0;
	else
		if (merker = false) then
			merker 	 := true;           // set START and TRG+
			timemark := ops.tAbsolute;  // store Time
			cPT 	   := cPT.read();	    // reading channel
			if (cPT = 0) then
				sQ1 := cIN; // OUT set to IN
			end_if;
		else // Time is running
			sET := (ops.tAbsolute - timemark)$DINT;
			if (sET >= cPT | sQ1 <> 0) then
        sQ1 := cIN; // OUT set to IN
				sET := cPT;
				timemark := ops.tAbsolute - sET$UDINT;
			end_if;
		end_if;
	end_if;

	output := sQ1;

END_FUNCTION
