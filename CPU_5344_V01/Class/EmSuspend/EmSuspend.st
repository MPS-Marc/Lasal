//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "emSuspend"
	Revision           = "1.0"
	GUID               = "{854EA620-20DA-4EE6-B50B-1E5DD1D4EB36}"
	RealtimeTask       = "false"
	CyclicTask         = "true"
	BackgroundTask     = "true"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(642,120)">
	<Channels>
		<Client Name="AutoActive" Required="true" Internal="false"/>
	</Channels>
	<Network Name="emSuspend">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_base"
				GUID       = "{888DE3BA-EB28-4E74-9853-5B9EBBC4305C}"
				Class      = "emBase"
				Position   = "(218,120)"
				Visualized = "true">
				<Channels>
					<Server Name="ClassSvr"/>
					<Server Name="cmdHMI"/>
					<Server Name="cmdWaitReset"/>
					<Server Name="ErrorNr"/>
					<Server Name="includesUnit"/>
					<Server Name="mode"/>
					<Server Name="state"/>
					<Server Name="stprAction"/>
					<Server Name="stprMoving"/>
					<Server Name="stprState"/>
					<Server Name="stsHMI_RunsAllowed"/>
					<Server Name="stsInAlarm"/>
					<Server Name="stsIsInterlocked"/>
					<Server Name="stsStateCompleted"/>
					<Server Name="thisIsUnit"/>
					<Client Name="id"/>
					<Client Name="nwEmOrUnit"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.ClassSvr" Destination="_base.ClassSvr" Vertices="(1156,210),(984,210),"/>
			<Connection Source="this.state" Destination="_base.state" Vertices="(1156,270),(984,270),"/>
			<Connection Source="this.mode" Destination="_base.mode" Vertices="(1156,330),(984,330),"/>
			<Connection Source="this.cmdHMI" Destination="_base.cmdHMI" Vertices="(1156,390),(984,390),"/>
			<Connection Source="this.stsInAlarm" Destination="_base.stsInAlarm" Vertices="(1156,450),(984,450),"/>
			<Connection Source="this.stsIsInterlocked" Destination="_base.stsIsInterlocked" Vertices="(1156,510),(984,510),"/>
			<Connection Source="this.stsHMI_RunsAllowed" Destination="_base.stsHMI_RunsAllowed" Vertices="(1156,570),(984,570),"/>
			<Connection Source="this.ErrorNr" Destination="_base.ErrorNr" Vertices="(1156,630),(984,630),"/>
			<Connection Source="this.stprAction" Destination="_base.stprAction" Vertices="(1156,690),(984,750),"/>
			<Connection Source="this.stprMoving" Destination="_base.stprMoving" Vertices="(1156,750),(984,810),"/>
			<Connection Source="this.stprState" Destination="_base.stprState" Vertices="(1156,810),(984,870),"/>
			<Connection Source="this.stsStateCompleted" Destination="_base.stsStateCompleted" Vertices="(1156,870),(984,930),"/>
			<Connection Source="this.thisIsUnit" Destination="_base.thisIsUnit" Vertices="(1156,930),(984,1170),"/>
			<Connection Source="this.includesUnit" Destination="_base.includesUnit" Vertices="(1156,990),(984,1230),"/>
			<Connection Source="_base.nwEmOrUnit" Destination="this.nwEmOrUnit" Vertices="(218,210),(38,210),"/>
			<Connection Source="_base.id" Destination="this.id" Vertices="(218,270),(38,270),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
#pragma using emBase

emSuspend : CLASS
: emBase
  //Servers:
  //Clients:
	AutoActive 	: CltCh_DINT;
  //Variables:
  //Functions:
	
	FUNCTION VIRTUAL work;
	
	FUNCTION VIRTUAL execExecute;
	
	FUNCTION VIRTUAL execHolding;
	
	FUNCTION VIRTUAL execHeld;
	
	FUNCTION VIRTUAL execUnHolding;
	
	FUNCTION VIRTUAL execSuspending;
	
	FUNCTION VIRTUAL execSuspended;
	
	FUNCTION VIRTUAL execUnSuspending;
	
	FUNCTION VIRTUAL RunAction;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB emSuspend::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_EMSUSPEND
1$UINT, 0$UINT, (SIZEOF(::emSuspend))$UINT, 
0$UINT, 1$UINT, 0$UINT, 
TO_UDINT(1397685540), "emSuspend", //Class
TO_UDINT(2572249677), "emBase", 1$UINT, 0$UINT, //Baseclass
//Servers:
//Clients:
(::emSuspend.AutoActive.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(3275514458), "AutoActive", 
END_FUNCTION


#define USER_CNT_emSuspend 41

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_emSuspend] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION emSuspend::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
		nCmdSize	: UINT;
	END_VAR

	ret_code	:= emBase::@STD();
	IF ret_code <> C_OK THEN
		RETURN;
	END_IF;
	nCmdSize		:= cmBase::ClassSvr.pMeth^.nCmds$UINT*SIZEOF(pVoid) + CMDMETH.Init;

	_memcpy((#vmt.CmdTable)$^USINT, cmBase::ClassSvr.pMeth, nCmdSize);
	vmt.CmdTable.nCmds		:= nSTDCMD + USER_CNT_emSuspend;
#pragma warning (disable : 74)
	vmt.UserFcts[9]		:= #work();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[23]		:= #execExecute();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[26]		:= #execHolding();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[27]		:= #execHeld();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[28]		:= #execUnHolding();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[33]		:= #execSuspending();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[34]		:= #execSuspended();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[35]		:= #execUnSuspending();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[40]		:= #RunAction();

#pragma warning (default : 74)
	cmBase::ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF cmBase::ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION

// IT-Jdk 11-10-2021: Changes made for action 10 and 20, removed control buzzer
// JdK 07-10-2021 changed emSuspend, for actione 10 also control buzzer

// errornr=1 : Unknown action

FUNCTION VIRTUAL emSuspend::work      
END_FUNCTION


FUNCTION VIRTUAL emSuspend::execUnHolding
  execExecute();
END_FUNCTION


FUNCTION VIRTUAL emSuspend::execUnSuspending
  execUnHolding();
END_FUNCTION


FUNCTION VIRTUAL emSuspend::RunAction

CASE stprAction OF
  
  
  1: // check what to do
    CASE actionLine.actione OF
    
    1: 
      stprAction:=10; 
      
    2, 100:
      stprAction:= 20;
    ELSE
      giveAlarm(errorNr:=1); 
    END_CASE;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 

  10: //just go to suspended
    pmlCom.sts.stateReq.ID:=id;
    pmlCom.sts.stateReq.state:=Suspending;
 //   ctrlBuzzer.cmdBlow.Write(input:=1);
    stprAction:=0;

  20: //just go to suspended if autoactive is 0
    AutoActive:= AutoActive.Read();
    IF  AutoActive=0 THEN
      pmlCom.sts.stateReq.ID:=id;
      pmlCom.sts.stateReq.state:=Suspending;
    END_IF;  
    stprAction:=0;

end_case;
  

END_FUNCTION

FUNCTION VIRTUAL emSuspend::execSuspending
  execExecute();
END_FUNCTION


FUNCTION VIRTUAL emSuspend::execExecute
  runAction();

    IF stprAction=0 THEN
       stprState:=1000; //only state completed if action is done
    ELSE
       stprState:=1;
    END_IF;
END_FUNCTION


FUNCTION VIRTUAL emSuspend::execHolding
 execExecute();

END_FUNCTION


FUNCTION VIRTUAL emSuspend::execHeld
  execExecute();
END_FUNCTION


FUNCTION VIRTUAL emSuspend::execSuspended
  execExecute();
END_FUNCTION
