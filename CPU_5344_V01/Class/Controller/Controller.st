//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)

//{{LSL_DEFINES
#DEFINE MaxDragDelayCycles 20
//}}LSL_DEFINES

//{{LSL_DECLARATION

(*!
<Class
	Name               = "Controller"
	Revision           = "1.43"
	GUID               = "{2EE15EB7-1F89-11D5-90C4-006063018AE8}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(284,120)"
	Comment            = "Base class for the different types of the controller">
	<Channels>
		<Server Name="Signal_Input" GUID="{2EE15EB8-1F89-11D5-90C4-006063018AE8}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false" Comment="This server shows the actual internal control variable and is &#13;&#10;connected to the _LMCAxis or CNC class."/>
	</Channels>
	<RevDoku>
		<Owner Company="Sigmatek"/>
		<Dokumentation Revision="1.43" Date="2020-09-30" Author="MarTho&#13;&#10;StePhi" Company="Sigmatek" Description="Improvement: Added method declaration of ReadHWDiagnosisDriveAxis to read HW Diagnisos Data from a connected DriveAxis object.&#13;&#10;Bugfix: The definition &quot;MaxDragDelayCycles&quot; caused an identical redefinition warning when compiling. Therefore the definition was moved into the base class &quot;Controller&quot;."/>
		<Dokumentation Revision="1.42" Date="2018-06-26" Author="SatChr" Company="Sigmatek" Description="Bugfix: All virtual methods, which should be overridden, do not return an uninitialzed return value."/>
		<Dokumentation Revision="1.41" Date="2015-03-06" Author="SatChr" Company="Sigmatek" Description="Improvement: New methodes: ControlLongReal, CheckHwReady, ReadActPosition, ReadPDO, IsReadyToSwitchOn (for future use)"/>
		<Dokumentation Revision="1.40" Date="2013-07-18" Author="SliMic" Company="Sigmatek" Description="1. Add some comments to the methodes and variables"/>
		<Dokumentation Revision="1.30" Date="2012-09-27" Author="RauAnd" Company="Sigmatek" Description="Modified for use with the _LMCAxis class."/>
		<Dokumentation Revision="1.20" Date="2011-05-02" Author="FuchsH" Company="Sigmatek" Description="Comments newly formatted."/>
		<Dokumentation Revision="1.10" Date="08.04.2010" Author="RauAnd" Company="Sigmatek" Description="Updating of the clients, server and methods documentation"/>
		<Dokumentation Revision="1.2" Date="22.01.2010" Author="RauAnd" Company="Sigmatek" Description="Updating of the clients, server and methods documentation"/>
		<Dokumentation Revision="1.1" Date="05.05.2008" Author="Rauand" Company="Sigmatek" Description="Improvement to use the position control in the drive"/>
		<Dokumentation Revision="1.0" Company="Sigmatek" Description="Creation"/>
	</RevDoku>
</Class>
*)
Controller : CLASS
	TYPE
	  _AXISCLASS :
	  (
	    _AXIS_CNC,
	    _AXIS_LMCAXIS,
	    _AXIS_CNC_NO_HW,
	    _AXIS_LMCAXIS_NO_HW,
	    _AXIS_CNC_OPT_HWCLASS_v1,
	    _AXIS_LMCAXIS_OPT_HWCLASS_v1
	  )$UDINT;
	END_TYPE
  //Servers:
	Signal_Input 	: SvrChCmd_DINT;
  //Clients:
  //Variables:
		AxisType 	: _AXISCLASS;
  //Functions:
				//! <Function Comment="Receives as input from the CNC/_LMCAxis, the Actual Position and the Internal Position." Name="control"/>
	FUNCTION VIRTUAL GLOBAL control
		VAR_INPUT
			ActPos 	: DINT;
			IntPos 	: DINT;
		END_VAR
		VAR_OUTPUT
			Result 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL ControlLongReal
		VAR_INPUT
			ActPos 	: LREAL;
			IntPos 	: LREAL;
			IntSpeed 	: LREAL;
		END_VAR;
				//! <Function Comment="Updates the CNC StateFlags and the CNC ControlFlags" Name="StatePtr"/>
	FUNCTION VIRTUAL GLOBAL StatePtr
		VAR_INPUT
			StatePtr 	: ^CncFlags;
			CncstatePtr 	: ^CntrFlgs;
		END_VAR
		VAR_OUTPUT
			Result 	: DINT;
		END_VAR;
				//! <Function Comment="Adopts the addresses of the Servers: AxisStatus, AxisError and the Bitfield:AxisControl&#13;&#10;around this for reading and updating" Name="SetAxisFlgs"/>
	FUNCTION VIRTUAL GLOBAL SetAxisFlgs
		VAR_INPUT
			pAxisStatus 	: ^_LMCAXIS_STATUS;
			pAxisError 	: ^_LMCAXIS_ERROR;
			pAxisControl 	: ^_LMCAXIS_CONTROLBITS;
		END_VAR
		VAR_OUTPUT
			Result 	: _LMCCONTROLLERTYPE;
		END_VAR;
				//! <Function Comment="Function to test if we have a controller connected to the CNC/_LMCAxis" Name="WriteConstant"/>
	FUNCTION VIRTUAL GLOBAL WriteConstant
		VAR_INPUT
			Resolution 	: DINT;
			Timebase 	: DINT;
			Accel 	: DINT;
			ptrCNCIntStruct 	: ^CNCInternalStruct;
		END_VAR
		VAR_OUTPUT
			StartSpeed 	: DINT;
		END_VAR;
				//! <Function Comment="Function used for transmitting the Speed value from the CNC/_LMCAxis to the controller" Name="Speed"/>
	FUNCTION VIRTUAL GLOBAL Speed
		VAR_INPUT
			ActSpeed 	: DINT;
		END_VAR;
				//! <Function Comment="set Client values" Name="SetClients"/>
	FUNCTION VIRTUAL GLOBAL SetClients
		VAR_INPUT
			No 	: DINT;			//! <Variable Comment="The parameter number of the client that should be changed." Name="SetClients.No"/>
			Value 	: DINT;			//! <Variable Comment="The value to which the client should be changed." Name="SetClients.Value"/>
		END_VAR
		VAR_OUTPUT
			State 	: DINT;			//! <Variable Comment="0 =&gt; Error : The number entered was invalid or controller is active&#13;&#10;1 =&gt; Ok" Name="SetClients.State"/>
		END_VAR;
				//! <Function Comment="checks if the drive is enabled or not" Name="PowerIsOn"/>
	FUNCTION VIRTUAL GLOBAL PowerIsOn
		VAR_OUTPUT
			RetCode 	: BOOL;			//! <Variable Comment="true ... Drive is enabled" Name="PowerIsOn.RetCode"/>
		END_VAR;
				//! <Function Comment="checks if a Hardware Error is activ" Name="CheckHWError"/>
	FUNCTION VIRTUAL GLOBAL CheckHWError
		VAR_OUTPUT
			Retcode 	: BOOL;
		END_VAR;
				//! <Function Comment="Check wether the hardware is ready for communication." Name="CheckHwReady"/>
	FUNCTION VIRTUAL GLOBAL CheckHwReady
		VAR_OUTPUT
			IsReady 	: BOOL;
		END_VAR;
				//! <Function Comment="Read Controller specific parameters" Name="ReadParameter"/>
	FUNCTION VIRTUAL GLOBAL ReadParameter
		VAR_INPUT
			No 	: DINT;			//! <Variable Comment="Parameter number" Name="ReadParameter.No"/>
		END_VAR
		VAR_OUTPUT
			Value 	: DINT;
		END_VAR;
				//! <Function Comment="Read the actual encoder position from the drive&#13;&#10;for DrivePosControl and _LMCSigControl only." Name="ReadActPosition"/>
	FUNCTION VIRTUAL GLOBAL ReadActPosition
		VAR_OUTPUT
			BinPos 	: DINT;			//! <Variable Comment="actual position in external units" Name="ReadActPosition.BinPos"/>
		END_VAR;
				//! <Function Comment="This methode is called at the beginig of each realtime cycle by the _LMCAxis object. DrivePosControl and _LMCSigControl use this interface to get all information from the hardware class _DriveAxis" Name="ReadPDO"/>
	FUNCTION VIRTUAL GLOBAL ReadPDO;
				//! <Function Comment="function to quit a hardware error" Name="QuitHWError"/>
	FUNCTION VIRTUAL GLOBAL QuitHWError;
				//! <Function Comment="Check whether the hardware is ready for switch on." Name="IsReadyToSwitchOn"/>
	FUNCTION VIRTUAL GLOBAL IsReadyToSwitchOn
		VAR_OUTPUT
			IsReady 	: DINT;
		END_VAR;
				//! <Function Comment="Method declaration to read the HW Diagnosis data of a connected DriveAxis object. &#13;&#10;Must be overwritten." Name="ReadHWDiagnosisDriveAxis"/>
	FUNCTION VIRTUAL GLOBAL ReadHWDiagnosisDriveAxis
		VAR_OUTPUT
			pHWDiagnosis 	: ^DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB Controller::@CT_
0$UINT,
2#0100000000000000$UINT, //TY_CONTROLLER
1$UINT, 43$UINT, (SIZEOF(::Controller))$UINT, 
1$UINT, 0$UINT, 0$UINT, 
TO_UDINT(1198357413), "Controller", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::Controller.Signal_Input.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(2233060755), "Signal_Input", 
//Clients:
END_FUNCTION


#define USER_CNT_Controller 16

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_Controller] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION Controller::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_Controller, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Write		:= #M_WR_DIRECT();
#pragma warning (disable : 74)
	vmt.UserFcts[0]		:= #control();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[1]		:= #ControlLongReal();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[2]		:= #StatePtr();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[3]		:= #SetAxisFlgs();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[4]		:= #WriteConstant();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[5]		:= #Speed();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[6]		:= #SetClients();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[7]		:= #PowerIsOn();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[8]		:= #CheckHWError();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[9]		:= #CheckHwReady();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[10]		:= #ReadParameter();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[11]		:= #ReadActPosition();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[12]		:= #ReadPDO();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[13]		:= #QuitHWError();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[14]		:= #IsReadyToSwitchOn();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[15]		:= #ReadHWDiagnosisDriveAxis();

#pragma warning (default : 74)
	Signal_Input.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF Signal_Input.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION
//{{LSL_ENCRYPTION 16#800
B825818FF342212FF2412A957A14F995379B411DBED5383511F0E9A29A5051DF31BB72AF7A4A7FF35FEE8CEE5F6F69F1463E1ADF49AD376B37BE0D0FE469FBE44A3443E8F5556F8490B3454389285C539DB9AB0C7ABFD0090F189059C6E70D22888AFE50
964E242018405AEA633AC6492436E59B9E326E387799BB7ADC34F089EF16A53F3F12987AF70EDB62C868CCA3D0DB44202DE4FA45B6801DF03A1A0D9F76AB2327224A05F0A995B0AD0280A51DFEC5EDC673FC068BB5EBC2A72B22C6EEE5544ADE4B62B067
D831313961CA577750FB4EDB05B8243EAE636B4BDC205BA38A687EC3399E886675BF9321903A572C28D99765821CD97DD6A0D637926FEECEBFA7CC3FD05E82CA01E8704F3EE135C2998FE2D7BCA60B9F3DE405082AD65203D57276BA49086452F4A743E6
8EB399EDC0E10A621910730CF1024D81C724D3D7B61DFE51A45AF6E9C5C38635E22BE5CBBBDB0FD5DC460083981E1A2B311FC0BBA4F2CD9312B9637EAA44B41DDE7C1C56C9A53AA1BEF11A6DCB2A480D8CE5FF7AE1E6F600BB339686510C89F1C8B3DAE1
931DEB563CD79E56AFEDBEE0DB7E2CAB36F6A4175DA4BC76D3A928F1585B9D97542E6E280F159B76CC3360F4C96DDBB9269921F3AB5EE89FA534B8217D8854F236E8833D91BA8B65AA7019A8DE0902D027794E9520D571954B20E87C2764D12F38241BF5
3EAE3CCB7AA8CD90F8753248EDF4DEC8294AAACDE40FC7A9FB0CDCD2FF27BE63ADD3939CE60C0D1ECDB36C92D464C14C82B3261A5E69A280EEC6629B0F8B03E7FF61D8350AC1DCFE67CAD19AB3EC5A0F89B2F098C828D1453CDA0453B0BFD19CB683D06E
A24714D74443CA3AA2D2AF3773B4E82539800F735DCFA67781F8F8C299AA099BF53396349BF720254431CA777163C7771BC274075F423B23806CC3FD2F33F84B5A06896D24A22CED3ACBC35516B922E8C3929C0A5F2E255FC796336354985F2761F3AC0F
B17F11665EF44C0C5F064B6EE8B9B1DCF064DCC5B9BF1B6F445B39AFDA0983C59BFC2D2E1367A3C96E492F102BD962F06BBFB2C7143D8254183E0E771403D59053562288439D1DF7F91573EFAD37332682496D45E7792523C304BD78C095C702510F1BCA
6BDC8EFECD6736BD1945A001F4FB4AE96CDB18018CCE595B5777EF004FC9B4EB57DBAE8B788BC890F444B88B8B75813EA2B7A5A3F2D7728710834678058DFF6A9EEF0650B2EA37D609BE4635B7F6AB8B177CE75BE01A7EA1CF09EDB8D3E643818C3E62C9
92526427619D3DF15B655B4251BA754D6D7B93744BA2855AFFD0F80B6863B076A4EC4F6B55176669BFFE588EC9001EFD2AEAC4E1CEAEBD9B963F13D7C15AC523F9C2B9041395B4265505A25F3112ADE0E29C2F779B125BB46F50DC70472E37D0B2F31E4F
21C629FFC1EE3C10084E1FCA7F7B613450BCBD564460D0661AFA0BB70FE028034DE0A161553E1A589A1B3371F7195C10CE6EA16DEC94DD53F46658DE4398417771A7FC2639BAC818D29A170E42187005841373D164EF6128F0F702F20E26C4EBF60B6248
579E74ED0E59B5FDD85CE39F2FB150DD672791B131B27C735FCC6F780B271D0BC69932BB9A7DB704FCC50455BD1D003BA749D4798CECB43C65A81160415DFA7B488E2B462E0246CCAC09B847905FDCC9120C2E647F39791CE8A3600D383D3F2DD245D9DA
BF99589FAF6188DC92D1A9DF22594707F074A38C8D21F532911F73E6DDC01E7BD2E8C4AF4547628E938F447A14F53BF3648B5129E99A0C61106040F1AF0662BD62AFE00EEEE9968DE379D1DAE632777744F262EB51120B49B24DFEE2A09E1160E978BE91
9D2FA08FB5C804526333B5CD4FE1903C895C86F8A2DB7EE365CE25A91991A01B92E5D8103464497D3E388762F1D3FB78E5D49D1D4663470D1138F1C3551587E5F8B33B2A50C7E88567CDE3AA7869B763C0D413BE80CE80793C68FB7AE335F04FE9D144F7
14126ACE8AD7E0572A6BA2D646986F716920F895D10710BA56F66770D54745400210ECA7069E487C66C68A5DAB23E1B5233B73E243C25C058026D996FF1BBB5BFB078476D8918813C9678CCE145B8FB4B5D6D6A8C99E435BE4A43B2F7AB8924B98C6B4FA
F5BB7E458C5D9357D4FE19849C5D4A14F62D19EFC611C8588CE6E669E1E83B208D2CD4B4072C4C1BFE2A383841BF7C3CC4555E36113C692DE40AA5ACFCB5D779CB0876529AB897600945A80F856EC342FBBA686C018F1D066AB85D10CB6659EE1D270DA9
5C81E1DED94000AAADD389B7E7B33F0191BE7632C85B81092A9CA428BBE7343A8EF46B41FE0C7F3D71F80CB6AE185C96A405ECE1BE93FDB73EB5ACB2835B8DDCFCE9C4404EF61FBFD04583238780198899D37EDD2811013EE949AAE20BCCADC765E5E2A9
8B5C6679ACED534E07AF289A226748D0DB1FEEA0D5CDB7B7481EB5B2956745C95FE3B867EEC86E1F2E7851FD46A7C0EAEC43407FE4D40D004E63CD96EC497C6CAD4C2C509A4CF21E5F8095777D63ED9F6F8432D01D2369A4E16CAC45E6ACF26B74808821
6156FE582B44AF5F6D29E63BFF31F46EB717AAAC41862B511EE442E7EF354ABB4EA6C80C79B8E792C1E7FF5FEE9565CE708756461F840A1E437C49C5A2B7AE1DE8C263E9985E9320C4F04E531BE78CDD892A5D68BFB562E85776F285447FD59B093D4DFD
4A29230295B3889FDA333BE0219DED7153E38631B53D1BD3ADAB416AABE98BE5A6813943A1EB8DC36BF6F8B2AD9AF517B3F22C7C26E8BC7739165596B1A0A6202844269A36D25C2B9F7B753F4E144E77E635DA8454EF0B9C3159D1E9DEB707F3F7C14EA8
4FF8B96DC2B1548894E053BE2B0CD9456212B564A6BB35AEF24D5A4687C763AC44BA87C52CB3515144413615BF0E5330CA995DD12CF0611320F710F7235FA67006D10FF4CFF606E555585ABE59E8032AAF2E655142A05560CE1ADD1ED255966319A1C504
8388AF7C179120FB6C0D423CCC625E8AB97188CFCFC4F3CAF0A99C9D0BCC5C3B9A1D9F3E3A63068C05BB18B21F2FD941EC5544EDD594F4B4C03BF13FFA1D599C68E49DF20EDCDECFB83B8BB2DEBA5B5236E0715E398A16BC6ED9FAFC025B6552998A8A26
9ED705DB1D7A34604101314E3097CDF13D8E3CBC05C23E4149E7E6CFB5D9228A0AF8A561448331F8A1B574B51A5225C1B4B7636251095CC35D1DB053BBBFD03196BB873E95B36531757BEFA7E6199738A1D2D3BA511616BA0BE8FBCBA864DD88EEEB3572
D8C8FDE04BDC47522F850796767909F9BDECBC26A7DF7B6A250D6914937BA579FA13C58D87E4B7A5F1398ABC97B3816570C4A9D7231FDDC691E69794409172F9DFF851D298BCC8DA49466B00E9A5B13AFEE95660E3EB081BD2CAD37AFA0C61AC7C7ADB85
B3928214A282CB68585DD798E563F783A7DF2036FF2923C798F508C6A631A10911D22947BEA489B41508FA8F431570953E1065FB14C6A7D76FF21E2B8D19A516A93656D7B1CAA1E07B99662EE5082EE719FA5867C9DA7920A6DECF126FBF660C594EDFC6
EDA5330010B381336DFE6FE235F23ABF073EEDD05DC4DD201BD44741BF2536F3BDBA940B88561260E6D50A35243D61C245C5F0B597B01D3481B14ED94A02E263E4EF0502EA305736FA29E4D25CDE290DFF59CF552B671143007E5111F0A8CE19F76A1668
FD34579EC4E3DEF69C252747B40C12336295BA7F7CDB07FAC89EA4B6E4860BD62047E41C72E1C8A1AE30B2B03880E591C4DF71C919B837A3693B97D9AB617DE1FAD3E1FA600D2A5B93F1DC0E9D980BC6D5B076830E433229B2C07DD2F71DE33E2ED6C396
0376145AE6A03845C619BEE438D8CDD139A4BDF0438182F75EA8E2B17A202DA2095207AC42ADF73525B05730CF4137F092A462BEFD6EC609CA0F8F397A8F1EBE16B69EB85A1A6447AD4CD26B3DC8D189517A048B938C1F626A4DE669253D895B2ABCA44C
2119D9548012FDB7A312B056CE1A205F47C157AC8685D93E826441631BD1FE1EB172B239CAEB94A07D9294F3C4A973599B390F16E96037D8D5F69B58AC624F9755DF3649FAD3007E6569417127E525DEE1808F6C7FA91B97B497833FEA65C47BCB37019F
8F25B4AC7337F1413CA10DC442DE7E375B080EB692C72C3EF42797F188395A8AF2DCD90BFC270A50EB117381BB89242479A1C16B5258EB9D355EDB551FF1BAA9CDD5F3EC08A70257304C71A859693478334942D5E418FD808050AB9EE9F783699786646F
685E073470A811DB67C8AB07378704CC68EB2C74736D580502DCE1D0352F018527C6316A91D4E5C4295F73F19E7D4733EA7874D88FF6F982EEF5751F5CC47A69F3EB60D28D232EE0