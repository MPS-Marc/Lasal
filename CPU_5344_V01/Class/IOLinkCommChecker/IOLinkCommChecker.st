//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "IOLinkCommChecker"
	Revision           = "0.0"
	GUID               = "{726ED689-E1A5-42C3-B32C-7992B2DF493C}"
	RealtimeTask       = "false"
	CyclicTask         = "true"
	DefCyclictime      = "10 ms"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(540,900)">
	<Channels>
		<Server Name="ClassSvr" GUID="{0787B925-7005-4B39-B069-4B317D95AB19}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="CommOk" GUID="{5FF2F2A3-DA94-4041-830B-8168F76CC7FA}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Client Name="ioLinkObject1" Required="false" Internal="false"/>
		<Client Name="ioLinkObject10" Required="false" Internal="false"/>
		<Client Name="ioLinkObject11" Required="false" Internal="false"/>
		<Client Name="ioLinkObject12" Required="false" Internal="false"/>
		<Client Name="ioLinkObject13" Required="false" Internal="false"/>
		<Client Name="ioLinkObject14" Required="false" Internal="false"/>
		<Client Name="ioLinkObject15" Required="false" Internal="false"/>
		<Client Name="ioLinkObject2" Required="false" Internal="false"/>
		<Client Name="ioLinkObject3" Required="false" Internal="false"/>
		<Client Name="ioLinkObject4" Required="false" Internal="false"/>
		<Client Name="ioLinkObject5" Required="false" Internal="false"/>
		<Client Name="ioLinkObject6" Required="false" Internal="false"/>
		<Client Name="ioLinkObject7" Required="false" Internal="false"/>
		<Client Name="ioLinkObject8" Required="false" Internal="false"/>
		<Client Name="ioLinkObject9" Required="false" Internal="false"/>
	</Channels>
</Class>
*)
IOLinkCommChecker : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
	CommOk 	: SvrCh_DINT;
  //Clients:
	ioLinkObject1 	: CltChCmd_SDCIDevice;
	ioLinkObject2 	: CltChCmd_SDCIDevice;
	ioLinkObject3 	: CltChCmd_SDCIDevice;
	ioLinkObject4 	: CltChCmd_SDCIDevice;
	ioLinkObject5 	: CltChCmd_SDCIDevice;
	ioLinkObject6 	: CltChCmd_SDCIDevice;
	ioLinkObject7 	: CltChCmd_SDCIDevice;
	ioLinkObject8 	: CltChCmd_SDCIDevice;
	ioLinkObject9 	: CltChCmd_SDCIDevice;
	ioLinkObject10 	: CltChCmd_SDCIDevice;
	ioLinkObject11 	: CltChCmd_SDCIDevice;
	ioLinkObject12 	: CltChCmd_SDCIDevice;
	ioLinkObject13 	: CltChCmd_SDCIDevice;
	ioLinkObject14 	: CltChCmd_SDCIDevice;
	ioLinkObject15 	: CltChCmd_SDCIDevice;
  //Variables:
		con1Ok 	: DINT;
		con2Ok 	: DINT;
		con3Ok 	: DINT;
		con4Ok 	: DINT;
		con5Ok 	: DINT;
		con6Ok 	: DINT;
		con7Ok 	: DINT;
		con8Ok 	: DINT;
		con9Ok 	: DINT;
		con10Ok 	: DINT;
		con11Ok 	: DINT;
		con12Ok 	: DINT;
		con13Ok 	: DINT;
		con14Ok 	: DINT;
		con15Ok 	: DINT;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION VIRTUAL GLOBAL CyWork
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION GLOBAL Prescan;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma usingLtd SDCIDevice


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB IOLinkCommChecker::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_IOLINKCOMMCHECKER
0$UINT, 0$UINT, (SIZEOF(::IOLinkCommChecker))$UINT, 
2$UINT, 15$UINT, 0$UINT, 
TO_UDINT(1968237440), "IOLinkCommChecker", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::IOLinkCommChecker.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
(::IOLinkCommChecker.CommOk.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1702773592), "CommOk", 
//Clients:
(::IOLinkCommChecker.ioLinkObject1.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(407812559), "ioLinkObject1", TO_UDINT(205726265), "SDCIDevice", 1$UINT, 4$UINT, 
(::IOLinkCommChecker.ioLinkObject2.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(2168973429), "ioLinkObject2", TO_UDINT(205726265), "SDCIDevice", 1$UINT, 4$UINT, 
(::IOLinkCommChecker.ioLinkObject3.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(4131444963), "ioLinkObject3", TO_UDINT(205726265), "SDCIDevice", 1$UINT, 4$UINT, 
(::IOLinkCommChecker.ioLinkObject4.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(1747209536), "ioLinkObject4", TO_UDINT(205726265), "SDCIDevice", 1$UINT, 4$UINT, 
(::IOLinkCommChecker.ioLinkObject5.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(522419670), "ioLinkObject5", TO_UDINT(205726265), "SDCIDevice", 1$UINT, 4$UINT, 
(::IOLinkCommChecker.ioLinkObject6.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(2250910828), "ioLinkObject6", TO_UDINT(205726265), "SDCIDevice", 1$UINT, 4$UINT, 
(::IOLinkCommChecker.ioLinkObject7.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(4046265594), "ioLinkObject7", TO_UDINT(205726265), "SDCIDevice", 1$UINT, 4$UINT, 
(::IOLinkCommChecker.ioLinkObject8.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(1636958571), "ioLinkObject8", TO_UDINT(205726265), "SDCIDevice", 1$UINT, 4$UINT, 
(::IOLinkCommChecker.ioLinkObject9.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(378876413), "ioLinkObject9", TO_UDINT(205726265), "SDCIDevice", 1$UINT, 4$UINT, 
(::IOLinkCommChecker.ioLinkObject10.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(4279783097), "ioLinkObject10", TO_UDINT(205726265), "SDCIDevice", 1$UINT, 4$UINT, 
(::IOLinkCommChecker.ioLinkObject11.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(2283765295), "ioLinkObject11", TO_UDINT(205726265), "SDCIDevice", 1$UINT, 4$UINT, 
(::IOLinkCommChecker.ioLinkObject12.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(286666645), "ioLinkObject12", TO_UDINT(205726265), "SDCIDevice", 1$UINT, 4$UINT, 
(::IOLinkCommChecker.ioLinkObject13.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(1712398083), "ioLinkObject13", TO_UDINT(205726265), "SDCIDevice", 1$UINT, 4$UINT, 
(::IOLinkCommChecker.ioLinkObject14.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(4168452768), "ioLinkObject14", TO_UDINT(205726265), "SDCIDevice", 1$UINT, 4$UINT, 
(::IOLinkCommChecker.ioLinkObject15.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(2406660662), "ioLinkObject15", TO_UDINT(205726265), "SDCIDevice", 1$UINT, 4$UINT, 
END_FUNCTION


#define USER_CNT_IOLinkCommChecker 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_IOLinkCommChecker] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION IOLinkCommChecker::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_IOLinkCommChecker, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Init		:= #Init();
	vmt.CmdTable.CyWork		:= #CyWork();
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL IOLinkCommChecker::Init
con1Ok := IsClientConnected(#ioLinkObject1);
con2Ok := IsClientConnected(#ioLinkObject2);
con3Ok := IsClientConnected(#ioLinkObject3);
con4Ok := IsClientConnected(#ioLinkObject4);
con5Ok := IsClientConnected(#ioLinkObject5);
con6Ok := IsClientConnected(#ioLinkObject6);
con7Ok := IsClientConnected(#ioLinkObject7);
con8Ok := IsClientConnected(#ioLinkObject8);
con9Ok := IsClientConnected(#ioLinkObject9);
con10Ok := IsClientConnected(#ioLinkObject10);
con11Ok := IsClientConnected(#ioLinkObject11);
con12Ok := IsClientConnected(#ioLinkObject12);
con13Ok := IsClientConnected(#ioLinkObject13);
con14Ok := IsClientConnected(#ioLinkObject14);
con15Ok := IsClientConnected(#ioLinkObject15);

END_FUNCTION

FUNCTION VIRTUAL GLOBAL IOLinkCommChecker::CyWork
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR
  
  //update vals
  Prescan();
  
  // check for each object if the state is classok. if not all ok, communication is lost. 
  // one of the reasons for losing communication can be that cables are damaged or 24v too low
  
  if (con1Ok = 0 | ioLinkObject1 = _ClassOk) & // not connected or status is ok 
     (con2Ok = 0 | ioLinkObject2 = _ClassOk) &
     (con3Ok = 0 | ioLinkObject3 = _ClassOk) &
     (con4Ok = 0 | ioLinkObject4 = _ClassOk) &
     (con5Ok = 0 | ioLinkObject5 = _ClassOk) &
     (con6Ok = 0 | ioLinkObject6 = _ClassOk) &
     (con7Ok = 0 | ioLinkObject7 = _ClassOk) &
     (con8Ok = 0 | ioLinkObject8 = _ClassOk) &
     (con9Ok = 0 | ioLinkObject9 = _ClassOk) &
     (con10Ok = 0 | ioLinkObject10 = _ClassOk) &
     (con11Ok = 0 | ioLinkObject11 = _ClassOk) &
     (con12Ok = 0 | ioLinkObject12 = _ClassOk) &
     (con13Ok = 0 | ioLinkObject13 = _ClassOk) &
     (con14Ok = 0 | ioLinkObject14 = _ClassOk) &
     (con15Ok = 0 | ioLinkObject15 = _ClassOk)
  then
    CommOk := 1;
  else
    CommOk := 0;
  end_if;
  
  
	state := READY;

END_FUNCTION



FUNCTION GLOBAL IOLinkCommChecker::Prescan
if con1Ok then ioLinkObject1 := ioLinkObject1.Read(); end_if;
if con2Ok then ioLinkObject2 := ioLinkObject2.Read(); end_if;
if con3Ok then ioLinkObject3 := ioLinkObject3.Read(); end_if;
if con4Ok then ioLinkObject4 := ioLinkObject4.Read(); end_if;
if con5Ok then ioLinkObject5 := ioLinkObject5.Read(); end_if;
if con6Ok then ioLinkObject6 := ioLinkObject6.Read(); end_if;
if con7Ok then ioLinkObject7 := ioLinkObject7.Read(); end_if;
if con8Ok then ioLinkObject8 := ioLinkObject8.Read(); end_if;
if con9Ok then ioLinkObject9 := ioLinkObject9.Read(); end_if;
if con10Ok then ioLinkObject10 := ioLinkObject10.Read(); end_if;
if con11Ok then ioLinkObject11 := ioLinkObject11.Read(); end_if;
if con12Ok then ioLinkObject12 := ioLinkObject12.Read(); end_if;
if con13Ok then ioLinkObject13 := ioLinkObject13.Read(); end_if;
if con14Ok then ioLinkObject14 := ioLinkObject14.Read(); end_if;
if con15Ok then ioLinkObject15 := ioLinkObject15.Read(); end_if;
END_FUNCTION
