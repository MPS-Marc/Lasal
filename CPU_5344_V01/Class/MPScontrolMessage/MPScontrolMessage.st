//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "MPScontrolMessage"
	Revision           = "0.0"
	GUID               = "{51B64349-5F53-4CAF-B78D-200EDCF63EBD}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(420,360)">
	<Channels>
		<Server Name="ClassSvr" GUID="{51BE1682-C10F-4BE6-A721-F442E518D8B8}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Data" GUID="{ABE55F6B-CB8C-4896-968B-F9B422445CC0}" Class="String" Visualized="true" Remotely="true" Initialize="true" WriteProtected="false" Retentive="false" Comment="use this channel to access the string functions"/>
		<Server Name="responseTag" GUID="{72A231BE-319D-406A-9716-73E738FA7E15}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="show" GUID="{3168671C-F89F-4093-88E9-CD620E0DE8F5}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="typeTag" GUID="{3C518D7C-5721-460C-8C24-BED34684213E}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Client Name="text" Required="true" Internal="true"/>
	</Channels>
	<Network Name="MPScontrolMessage">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "text"
				GUID       = "{0E7640F0-3DF8-4C33-9D5A-6BD633D6BB71}"
				Class      = "String"
				Position   = "(60,240)"
				Visualized = "true"
				Remotely   = "true">
				<Channels>
					<Server Name="Data"/>
					<Client Name="SingleRealloc" Value="1"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.text" Destination="text.Data"/>
			<Connection Source="this.Data" Destination="text.Data" Vertices="(998,270),(826,330),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
MPScontrolMessage : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
	Data 	: SvrChCmd_UDINT;
	typeTag 	: SvrCh_DINT;
	responseTag 	: SvrCh_DINT;
	show 	: SvrCh_DINT;
  //Clients:
	text 	: CltChCmd_String;
  //Variables:
		tmpString 	: longText;
		isTheSame 	: DINT;
		len 	: UDINT;
  //Functions:
	
	FUNCTION GLOBAL showMessage
		VAR_INPUT
			string 	: longText;
			typeOffMessage 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL Data::Read
		VAR_OUTPUT
			output (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL Data::Write
		VAR_INPUT
			input (EAX) 	: UDINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL responseTag::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma using String


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB MPScontrolMessage::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_MPSCONTROLMESSAGE
0$UINT, 0$UINT, (SIZEOF(::MPScontrolMessage))$UINT, 
5$UINT, 1$UINT, 0$UINT, 
TO_UDINT(2983621010), "MPScontrolMessage", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::MPScontrolMessage.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
(::MPScontrolMessage.Data.pMeth)$UINT, _CH_SVR_OBJ$UINT, 2#0000000001000000$UINT, TO_UDINT(2607161047), "Data", 
(::MPScontrolMessage.typeTag.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2680225850), "typeTag", 
(::MPScontrolMessage.responseTag.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(322488347), "responseTag", 
(::MPScontrolMessage.show.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(77280437), "show", 
//Clients:
(::MPScontrolMessage.text.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(220088947), "text", TO_UDINT(1850111279), "String", 1$UINT, 11$UINT, 
END_FUNCTION


#define USER_CNT_MPScontrolMessage 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_MPScontrolMessage] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION MPScontrolMessage::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_MPScontrolMessage, pCmd := #vmt.CmdTable);
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	_memcpy((#vmt.CmdTable)$^USINT, Data.pMeth, SIZEOF(CMDMETH));
	vmt.CmdTable.nCmds		:= nSTDCMD;
	vmt.CmdTable.Read		:= #Data::Read();
	vmt.CmdTable.Write		:= #Data::Write();
	Data.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF Data.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	typeTag.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF typeTag.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	responseTag.pMeth			:= StoreMethod( #M_RD_DIRECT(), #responseTag::Write() );
	IF responseTag.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	show.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF show.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL MPScontrolMessage::Data::Read
	VAR_OUTPUT
		output (EAX) 	: UDINT;
	END_VAR

	Data := text.Data.Read();
	output := Data;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MPScontrolMessage::Data::Write
	VAR_INPUT
		input (EAX) 	: UDINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: UDINT;
	END_VAR

	Data := input;
	result := (text.Data.Write(Data))$UDINT;

END_FUNCTION


FUNCTION GLOBAL MPScontrolMessage::showMessage
	VAR_INPUT
		string 	: longText;
		typeOffMessage 	: DINT;
	END_VAR
  
  typeTag:= typeOffMessage; //can be 0 for ok message or 1 for yes/no
  
  responseTag:=0; //1 for yes, and -1 for no
  
  IF tmpString = string THEN
    isTheSame:= TRUE;
  ELSE
    isTheSame:= FALSE;
  END_IF;
  tmpString:= string;
  IF isTheSame THEN
    len:= _strlen(src:=#tmpString[0]);
    IF len <= 250 THEN
      tmpString[len]:= '.';
    END_IF;
  END_IF;
  show:= 1;
  text.WriteDataOff(udLen:=sizeof(longText), udOff:=0, pData:=#tmpString[0]);

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MPScontrolMessage::responseTag::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	responseTag := input;
  show:= 0;  
	result := responseTag;

END_FUNCTION
